; OM File Header - Saved 2021/03/18 12:06:52
; (6.18 :patc (om-make-point 226 60) (om-make-point 354 25) (om-make-point 699 649) "" 183 0 nil "2021/03/18 12:06:52")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-JI")))(setf *om-current-persistent* (om-load-patch1 "GERAL - octave-reduce" (quote ((let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 47 198) (om-make-point 26 28) 3 "3" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "CHOOSE" (quote choose) (quote ((om-load-inputfun (quote input-funbox) "List or list of lists of anything." "NOTELIST" (list 1 2 3 4 5 6 7 8 9 10)) (om-load-inputfun (quote input-funbox) "What element(s) do you want?" "CHORD-N" (list 1 7 9)))) (om-make-point 23 228) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 206 270) (om-make-point 26 28) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OCTAVE-REDUCE 3" (quote octave-reduce) (quote ((om-load-inputfun (quote input-funbox) "List of midicents." "NOTE" (list 4800 7200 6000)) (om-load-inputfun (quote input-funbox) "Octaves of this reduction." "OCTAVE" 1))) (om-make-point 154 319) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "DIAMOND" (quote diamond) (quote ((om-load-inputfun (quote input-funbox) "Limit-n for the diamond." "LIMITE" 11))) (om-make-point 20 85) nil nil nil nil 2))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "RT->MC" (quote rt->mc) (quote ((om-load-inputfun (quote input-funbox) "Convert list of ratios for midicent." "RATIO" 11/8) (om-load-inputfun (quote input-funbox) "This will be a note. This note will be the fundamental of the list of ratios." "FUNDAMENTAL" 6000))) (om-make-point 124 229) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-BOX 4" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 16 438) (om-make-point 331 40) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 303 16) "(5796.09 6182.404 5298.045 4364.916)" :font (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 207 125) (om-make-point 44 28) 6000 "6000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 34 47) (om-make-point 26 28) 7 "7" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 296 76) (quote "Reduzir lista de midicents para determinado intervalo. No caso deste exemplo o intervalo é entre 6000 e 8400. $$No inlet 4, usar 1 para redução em lista de listas.") "" (om-make-point 14 521) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((4 1 1 0 nil 0) (0 0 1 1 nil 0) (5 0 3 0 nil 0) (2 0 3 1 nil 0) (8 0 4 0 nil 0) (1 0 5 0 nil 0) (7 0 5 1 nil 0) (3 0 6 0 nil 0))) nil 6.18))
