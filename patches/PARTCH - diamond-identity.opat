
(:patch
 (:name "PARTCH - diamond-identity")
 (:doc "")
 (:info
  (:created "2020/09/11 16:02:47")
  (:modified "2021/03/15 11:37:49")
  (:by "om-sharp")
  (:version 1.02))
 (:window (:size (830 828)) (:position (156 55)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 502)
   (:y 173)
   (:w 213)
   (:h 80)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "LEFT OUTLET: Utonalities

RIGHT OUTLET: Otonalities
")
   (:id 0))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 146)
   (:y 213)
   (:w 62)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux")
   (:x 122)
   (:y 16)
   (:w 101)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 3 11 30))
   (:id 2))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 49)
   (:y 383)
   (:w 398)
   (:h 229)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size (650 300)) (:position (96 96)))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 7000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 6000 5582 5246 4965 4723 4511 4322)
         (:list 6418 6000 5664 5383 5141 4928 4739)
         (:list 6754 6336 6000 5719 5477 5264 5075)
         (:list 7035 6617 6281 6000 5758 5546 5357)
         (:list 7277 6859 6523 6242 6000 5788 5599)
         (:list 7489 7072 6736 6454 6212 6000 5811)
         (:list 7678 7261 6925 6643 6401 6189 6000)))
       (:lonset (:list 0 1000 2000 3000 4000 5000 6000 7000))
       (:ldur (:list 1000 1000 1000 1000 1000 1000 1000))
       (:lvel (:list 100 100 100 100 100 100 100))
       (:loffset (:list 0 0 0 0 0 0 0))
       (:lchan (:list 1 1 1 1 1 1 1))
       (:lport (:list nil nil nil nil nil nil nil))
       (:llegato nil)))))
   (:id 3))
  (:comment
   (:x 225)
   (:y 168)
   (:w 285)
   (:h 80)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "Cria a Tonalidade Diamante seguindo a teoria de Harry Partch porÃ©m usando umas lista de identidades selecionadas.")
   (:id 4))
  (:box
   (:library "OM-Sieves")
   (:type :object)
   (:reference sieve)
   (:group-id nil)
   (:name nil)
   (:x 77)
   (:y 60)
   (:w 190)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CR-EXP")
     (:value (:list 2 0 18))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CR-EXP") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object (:class sieve) (:slots ((:cr-exp (:list 3 11 30))))))
   (:id 5))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference revel-sieve)
   (:group-id nil)
   (:name "revel-sieve")
   (:x 59)
   (:y 111)
   (:w 137)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference (:symbol "DIAMOND-IDENTITY" "OM-JI"))
   (:group-id nil)
   (:name "diamond-identity")
   (:x 17)
   (:y 162)
   (:w 192)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 7))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference (:symbol "RT->MC" "OM-JI"))
   (:group-id nil)
   (:name "rt->mc")
   (:x 49)
   (:y 277)
   (:w 102)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:comment
   (:x 415)
   (:y 34)
   (:w 161)
   (:h 32)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "LIMIT-5 => 1 3 5")
   (:id 9))
  (:comment
   (:x 478)
   (:y 82)
   (:w 257)
   (:h 39)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "LIMIT-9 => 1 3 5 7 9")
   (:id 10))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference (:symbol "DIAMOND" "OM-JI"))
   (:group-id nil)
   (:name "diamond")
   (:x 480)
   (:y 375)
   (:w 115)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LIMITE")
     (:value 11)
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 11))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 518)
   (:y 340)
   (:w 40)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 11)
   (:id 12)))
 (:connections
  (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 1)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 0)))))