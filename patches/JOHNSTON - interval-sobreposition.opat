
(:patch
 (:name "JOHNSTON - interval-sobreposition")
 (:doc "")
 (:info
  (:created "2020/09/11 16:01:38")
  (:modified "2021/03/15 11:28:57")
  (:by "om-sharp")
  (:version 1.02))
 (:window (:size (1228 819)) (:position (52 5)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 4)
   (:y 89)
   (:w 253)
   (:h 98)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "Inlet 1: Intervalo de Afinação Justa.

Inlet 2: Lista para as sobreposições.")
   (:id 0))
  (:comment
   (:x 226)
   (:y 258)
   (:w 371)
   (:h 98)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "Soprepõe um determinado intervalo seguindo uma lista (sieve). Example: No caso do intervalo 11/8 e a lista 1 2 3 4. O objeto sobreporá o intervalo 11/8 1 vez, 2 vezes, 3 vezes e 4 vezes.")
   (:id 1))
  (:box
   (:type :object)
   (:reference chord)
   (:group-id nil)
   (:name "CHORD")
   (:x 48)
   (:y 543)
   (:w 271)
   (:h 108)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (1368 705)) (:position (96 96)))
   (:edition-params
    (:scale :scale-1/8)
    (:chord-mode :arp-up)
    (:staff :gf))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic
        (:list
         6863
         4306
         5937
         6549
         3992
         5011
         6235
         3678
         4085
         5921
         7960
         8164
         5607
         7034
         7850
         5293
         6108
         7536
         4979
         5183
         7222
         4257
         4665
         6908
         8131
         4351
         6594
         7205
         4037
         6280))
       (:lvel
        (:list
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100
         100))
       (:loffset
        (:list
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0))
       (:ldur
        (:list
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000))
       (:lchan
        (:list
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1
         1))
       (:lport
        (:list
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil
         nil))))))
   (:id 2))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list 2")
   (:x 563)
   (:y 3)
   (:w 90)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 3 1 18))
   (:id 3))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 421)
   (:y 25)
   (:w 90)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 2 1 18))
   (:id 4))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 2")
   (:x 68)
   (:y 199)
   (:w 48)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9/8)
   (:id 5))
  (:box
   (:library "OM-Sieves")
   (:type :object)
   (:reference sieve)
   (:group-id nil)
   (:name nil)
   (:x 398)
   (:y 90)
   (:w 137)
   (:h 49)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CR-EXP")
     (:value (:list 2 0 18))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CR-EXP") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object (:class sieve) (:slots ((:cr-exp (:list 2 1 18))))))
   (:id 6))
  (:box
   (:library "OM-Sieves")
   (:type :object)
   (:reference sieve)
   (:group-id nil)
   (:name nil)
   (:x 536)
   (:y 89)
   (:w 137)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :text)
   (:showname nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CR-EXP")
     (:value (:list 2 0 18))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CR-EXP") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object (:class sieve) (:slots ((:cr-exp (:list 3 1 18))))))
   (:id 7))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference s-union)
   (:group-id nil)
   (:name "s-union")
   (:x 419)
   (:y 156)
   (:w 104)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIEVE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference revel-sieve)
   (:group-id nil)
   (:name "revel-sieve")
   (:x 238)
   (:y 132)
   (:w 137)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference (:symbol "INTERVAL-SOB" "OM-JI"))
   (:group-id nil)
   (:name "interval-sob")
   (:x 70)
   (:y 256)
   (:w 146)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "YOUR-SIEVE")
     (:value (:list 2 3 7 11 12))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 10))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference (:symbol "RT->MC" "OM-JI"))
   (:group-id nil)
   (:name "rt->mc")
   (:x 88)
   (:y 449)
   (:w 102)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference s-symmetry-perfil)
   (:group-id nil)
   (:name "s-symmetry-perfil")
   (:x 899)
   (:y 358)
   (:w 201)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIEVE-L")
     (:value (:list sieve))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "RANGE")
     (:value (:list 25 500))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MODO")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1009)
   (:y 234)
   (:w 95)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 25 500))
   (:id 13))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 836)
   (:y 268)
   (:w 172)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 19 16) (:list 11 16)))
   (:id 14))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference s-limite)
   (:group-id nil)
   (:name "s-limite")
   (:x 731)
   (:y 424)
   (:w 105)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SIEVE-L")
     (:value (:list (:list 19 16) (:list 11 16)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LIMITE")
     (:value 225)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MODO")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 757)
   (:y 389)
   (:w 51)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 225)
   (:id 16))
  (:box
   (:library "OM-Sieves")
   (:type :function)
   (:reference revel-sieve)
   (:group-id nil)
   (:name "revel-sieve")
   (:x 715)
   (:y 475)
   (:w 137)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 896)
   (:y 551)
   (:w 93)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 131)
   (:y 414)
   (:w 62)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3600)
   (:id 19))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference (:symbol "RT-OCTAVE" "OM-JI"))
   (:group-id nil)
   (:name "rt-octave")
   (:x 40)
   (:y 361)
   (:w 120)
   (:h 38)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FRAQ")
     (:value 3/2)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "octave")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 104)
   (:y 326)
   (:w 40)
   (:h 38)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 16)
   (:id 21)))
 (:connections
  (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 10 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 10 :out 1)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 2 :in 1)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 1)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 0)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 10 :in 1))
   (:attributes (:color nil :style nil :modif (-151/606 0))))
  (:connection (:from (:box 19 :out 0)) (:to (:box 11 :in 1)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 11 :in 0)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 20 :in 1)))))