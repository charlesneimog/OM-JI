
(:patch
 (:name "JOHNSTON - interval-sobreposition")
 (:doc "")
 (:info
  (:created "2020/09/11 16:01:38")
  (:modified "2020/09/11 16:01:51")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (727 602)) (:position (52 5)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 171)
   (:y 312)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference interval-sob)
   (:group-id nil)
   (:name "interval-sob")
   (:x 68)
   (:y 237)
   (:w 104)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SIEVE")
     (:value (:list 2 3 7 11 12))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 1))
  (:comment
   (:x 4)
   (:y 89)
   (:w 253)
   (:h 93)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "Inlet 1: Intervalo de Afinação Justa.

Inlet 2: Lista para as sobreposições.")
   (:id 2))
  (:comment
   (:x 238)
   (:y 238)
   (:w 371)
   (:h 59)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 12) (:style :plain)))
   (:align nil)
   (:text
    "Soprepõe um determinado intervalo seguindo uma lista (sieve). Example: No caso do intervalo 11/8 e a lista 1 2 3 4. O objeto sobreporá o intervalo 11/8 1 vez, 2 vezes, 3 vezes e 4 vezes.")
   (:id 3))
  (:box
   (:type :object)
   (:reference chord)
   (:group-id nil)
   (:name "CHORD")
   (:x 42)
   (:y 400)
   (:w 271)
   (:h 108)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LOFFSET")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 1))
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "LOFFSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord)
     (:slots
      ((:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:onset 0)
       (:item-time nil)
       (:item-internal-time nil)
       (:item-type nil)
       (:attributes nil)
       (:lmidic
        (:list
         6204
         6612
         6816
         7020
         7427
         7835
         8039
         8243
         8651
         9059
         9263
         9466))
       (:lvel (:list 100 100 100 100 100 100 100 100 100 100 100 100))
       (:loffset (:list 0 0 0 0 0 0 0 0 0 0 0 0))
       (:ldur
        (:list
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000
         1000))
       (:lchan (:list 1 1 1 1 1 1 1 1 1 1 1 1))
       (:lport
        (:list nil nil nil nil nil nil nil nil nil nil nil nil))))))
   (:id 4))
  (:box
   (:type :function)
   (:reference revel-crible)
   (:group-id nil)
   (:name "REVEL-CRIBLE")
   (:x 292)
   (:y 163)
   (:w 118)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name nil) (:reactive nil)))
   (:id 5))
  (:box
   (:type :function)
   (:reference c-union)
   (:group-id nil)
   (:name "C-UNION")
   (:x 288)
   (:y 96)
   (:w 89)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CRIBLE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name nil) (:reactive nil)))
   (:id 6))
  (:box
   (:type :object)
   (:reference crible)
   (:group-id nil)
   (:name "CRIBLE 2")
   (:x 333)
   (:y 41)
   (:w 89)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "self")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "cr-exp")
     (:value (:list 2 0 18))
     (:reactive nil)))
   (:outputs (:output (:name nil) (:reactive nil)))
   (:id 7))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list 2")
   (:x 380)
   (:y 8)
   (:w 51)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 3 1 18))
   (:id 8))
  (:box
   (:type :object)
   (:reference crible)
   (:group-id nil)
   (:name "CRIBLE")
   (:x 244)
   (:y 39)
   (:w 79)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "self")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "cr-exp")
     (:value (:list 2 0 18))
     (:reactive nil)))
   (:outputs (:output (:name nil) (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "list")
   (:x 280)
   (:y 10)
   (:w 51)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 2 1 18))
   (:id 10))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 2")
   (:x 68)
   (:y 199)
   (:w 37)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 9/8)
   (:id 11)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 1)))
  (:connection (:from (:box 1 :out 1)) (:to (:box 0 :in 0)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 0)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 6 :in 0)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 1 :in 0)))))