
(:patch
 (:name "3.2.1 - densificação por bpf")
 (:doc "")
 (:info
  (:created "2020/08/27 19:18:36")
  (:modified "2020/08/30 15:25:06")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1382 784)) (:position (-8 -8)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 628)
   (:y 233)
   (:w 44)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8400)
   (:id 0))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 588)
   (:y 263)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 1))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 535)
   (:y 212)
   (:w 44)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7200)
   (:id 2))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 495)
   (:y 242)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 402)
   (:y 191)
   (:w 44)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 4))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt->mc)
   (:group-id nil)
   (:name "rt->mc")
   (:x 369)
   (:y 225)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value 11/8)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference rt-octave)
   (:group-id nil)
   (:name "rt-octave")
   (:x 519)
   (:y 143)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FRAQ")
     (:value 3/2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 18")
   (:x 564)
   (:y 76)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 7))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 525)
   (:y 105)
   (:w 76)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list 1 2 3 4 5 6 7 8 9 10))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 1 7 9))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Choose-chord")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (844 500)) (:position (104 100)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 156)
       (:y 398)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 50)
       (:y 50)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 168)
       (:y 81)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference remove-dup)
       (:group-id nil)
       (:name "remove-dup")
       (:x 124)
       (:y 252)
       (:w 105)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 1 2 3 4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEST")
         (:value eq)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DEPTH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 100)
       (:y 204)
       (:w 76)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 1 2 3 4 5 6 7 8 9 10))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 1 7 9))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 56)
       (:y 298)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 44)
       (:y 363)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 0 :in 0))))))
   (:group-id nil)
   (:name "Choose-chord")
   (:x 109/2)
   (:y 2265/4)
   (:w 114)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 9))
  (:comment
   (:x 1114)
   (:y 493)
   (:w 128)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text "Fundamental")
   (:id 10))
  (:comment
   (:x 1083)
   (:y 449)
   (:w 165)
   (:h 23)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text "Fundamental estimada")
   (:id 11))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 5")
   (:x 1035)
   (:y 445)
   (:w 47)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value c5)
   (:id 12))
  (:box
   (:type :function)
   (:reference n->mc)
   (:group-id nil)
   (:name "n->mc")
   (:x 1032)
   (:y 488)
   (:w 75)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SYMB")
     (:value (:list "C3"))
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "middle-c")
     (:value 4)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 13))
  (:box
   (:type :value)
   (:reference symbol)
   (:group-id nil)
   (:name "aux 21")
   (:x 1115)
   (:y 541)
   (:w 106)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value teste-violino-passando-o-arco)
   (:id 14))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "TRANSPOSIÇÃO PARA MAX/MSP-COLL")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1030 692)) (:position (192 8)))
     (:grid nil)
     (:lock t)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "SDIF") (:doc "")))
       (:group-id nil)
       (:name "SDIF")
       (:x 323)
       (:y 13)
       (:w 45)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 388)
       (:y 644)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "area de afinação")
         (:doc "")))
       (:group-id nil)
       (:name "area de afinação")
       (:x 556)
       (:y 384)
       (:w 109)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 3)
         (:name "fundamental do timbre")
         (:doc "")))
       (:group-id nil)
       (:name "fundamental do timbre")
       (:x 645)
       (:y 347)
       (:w 145)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "name") (:doc "")))
       (:group-id nil)
       (:name "name")
       (:x 701)
       (:y 556)
       (:w 52)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "tempo e sinoides + conversao")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (1366 725)) (:position (-8 -8)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "tempo") (:doc "")))
           (:group-id nil)
           (:name "tempo")
           (:x 13)
           (:y 5)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 2)
             (:name "Tempo sem repetições")
             (:doc "")))
           (:group-id nil)
           (:name "Tempo sem repetições")
           (:x 52)
           (:y 5)
           (:w 141)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 320)
           (:y 468)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 3)
             (:name "amplitude")
             (:doc "")))
           (:group-id nil)
           (:name "amplitude")
           (:x 123)
           (:y 81)
           (:w 76)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "alturas") (:doc "")))
           (:group-id nil)
           (:name "alturas")
           (:x 289)
           (:y 66)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 8")
           (:x 825)
           (:y 411)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value de)
           (:id 5))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 7")
           (:x 887)
           (:y 334)
           (:w 147)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value conversao_para_max/msp)
           (:id 6))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 740)
           (:y 456)
           (:w 159)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 5")
           (:x 329)
           (:y 287)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 40)
           (:id 8))
          (:box
           (:type :function)
           (:reference first-n)
           (:group-id nil)
           (:name "first-n")
           (:x 297)
           (:y 322)
           (:w 72)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 4")
           (:x 241)
           (:y 182)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value >)
           (:id 10))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 3")
           (:x 300)
           (:y 176)
           (:w 53)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value second)
           (:id 11))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 177)
           (:y 230)
           (:w 189)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "test")
             (:value (:list quote <))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "key")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (lista1)"
               "  (remove-duplicates lista1 :key #'car))"))))
           (:group-id nil)
           (:name "lispfunction")
           (:x 16)
           (:y 235)
           (:w 102)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LISTA1")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 1934/3)
           (:y 35)
           (:w 73)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :function)
           (:reference arithm-ser)
           (:group-id nil)
           (:name "arithm-ser")
           (:x 2207/3)
           (:y 143)
           (:w 96)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BEGIN")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "END")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "STEP")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 15))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 2399/3)
           (:y 113)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 16))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 2228/3)
           (:y 61)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 17))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 427)
           (:y 253)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value ",")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "OMLOOP")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "tempo")
                 (:doc "")))
               (:group-id nil)
               (:name "tempo")
               (:x 284)
               (:y 7)
               (:w 56)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "tempo sem repetições")
                 (:doc "")))
               (:group-id nil)
               (:name "tempo sem repetições")
               (:x 405)
               (:y 53)
               (:w 140)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 389)
               (:y 480)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 3)
                 (:name "amplitude")
                 (:doc "")))
               (:group-id nil)
               (:name "amplitude")
               (:x 144)
               (:y 128)
               (:w 76)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 4)
                 (:name "alturas")
                 (:doc "")))
               (:group-id nil)
               (:name "alturas")
               (:x 14)
               (:y 58)
               (:w 58)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 52)
               (:y 367)
               (:w 90)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference remove)
               (:group-id nil)
               (:name "remove")
               (:x 540)
               (:y 306)
               (:w 80)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ITEM")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 357)
               (:y 325)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference omif)
               (:group-id nil)
               (:name "omif")
               (:x 336)
               (:y 249)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ACTION")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference om=)
               (:group-id nil)
               (:name "om=")
               (:x 346)
               (:y 173)
               (:w 64)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 285)
               (:y 457)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 10))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 72)
               (:y 134)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 11))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 139)
               (:y 225)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 12))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 303)
               (:y 64)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 13)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 9 :in 1)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 8 :in 1)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 6 :in 1)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 5 :in 1)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 9 :in 0))))))
           (:group-id nil)
           (:name "OMLOOP")
           (:x 21)
           (:y 163)
           (:w 86)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "tempo")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "tempo sem repetições")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "amplitude")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "alturas")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 19))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 425)
           (:y 384)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 20))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 405)
           (:y 548)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 21))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 2243/3)
           (:y 269)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 22))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 457)
           (:y 74)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 23))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 482)
           (:y 321)
           (:w 60)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 24))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 538)
           (:y 272)
           (:w 54)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 25))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 607)
           (:y 315)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 26)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 23 :in 0)))
          (:connection
           (:from (:box 3 :out 0))
           (:to (:box 19 :in 2))
           (:attributes
            (:color
             (:color 0.0S0 1.0S0 0.0S0 1.0)
             :style
             nil
             :modif
             nil)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 19 :in 3)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 2)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 26 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 18 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 1)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 2)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 7 :in 3)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 1)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 2)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 25 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 20 :out 1)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 18 :in 0)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 19 :in 1)))
          (:connection (:from (:box 24 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 25 :out 0)) (:to (:box 24 :in 0)))
          (:connection
           (:from (:box 26 :out 0))
           (:to (:box 25 :in 1))))))
       (:group-id nil)
       (:name "tempo e sinoides + conversao")
       (:x 47)
       (:y 556)
       (:w 205)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "tempo")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "Tempo sem repetições")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "amplitude")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "alturas")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 5))
      (:comment
       (:x 509)
       (:y 188)
       (:w 208)
       (:h 113)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "compress and expand the timbre.

1 = normal, without difference.

e.g.

0.888 = compress.
1.333 = expanded.")
       (:id 6))
      (:comment
       (:x 367)
       (:y 23)
       (:w 85)
       (:h 45)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "SDIF")
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "tempo lista")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 558/7)
           (:y 305)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 537/7)
           (:y 258)
           (:w 60)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 376/7)
           (:y 186)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0))))))
       (:group-id nil)
       (:name "tempo lista")
       (:x 63/2)
       (:y 358)
       (:w 100)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 8))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Amplitude")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 971/7)
           (:y 406)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference om-scale)
           (:group-id nil)
           (:name "om-scale")
           (:x 1230/7)
           (:y 283)
           (:w 88)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MINOUT")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MAXOUT")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference third)
           (:group-id nil)
           (:name "third")
           (:x 803/7)
           (:y 228)
           (:w 64)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 719/7)
           (:y 148)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0))))))
       (:group-id nil)
       (:name "Amplitude ")
       (:x 1046/3)
       (:y 1061/3)
       (:w 98)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Time | ordem | 10 milissegundos")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 1160/7)
           (:y 431)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 1419/7)
           (:y 347)
           (:w 80)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference remove-dup)
           (:group-id nil)
           (:name "remove-dup")
           (:x 1727/7)
           (:y 273)
           (:w 105)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value (:list 1 2 3 4))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TEST")
             (:value eq)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "DEPTH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 1762/7)
           (:y 214)
           (:w 60)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 1839/7)
           (:y 127)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0))))))
       (:group-id nil)
       (:name "Time | ordem | 10 milissegundos")
       (:x 557/4)
       (:y 1445/4)
       (:w 222)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 10))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Correção SDIF")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 512)
           (:y 429)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 2)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 488)
           (:y 276)
           (:w 67)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 3")
             (:index 3)
             (:doc nil)))
           (:group-id nil)
           (:name "output 3")
           (:x 308)
           (:y 123)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 3))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 355)
           (:y 38)
           (:w 80)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "OMLOOP")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 26)
               (:y 0)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 300)
               (:y 225)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 226)
               (:y 132)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference length)
               (:group-id nil)
               (:name "length")
               (:x 225)
               (:y 57)
               (:w 73)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 168)
               (:y 231)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 4))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 102)
               (:y 67)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 5)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 2 :out 1))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 3 :in 0))))))
           (:group-id nil)
           (:name "OMLOOP")
           (:x 201)
           (:y 40)
           (:w 86)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 187)
           (:y 255)
           (:w 80)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 5")
           (:x 379)
           (:y 367)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 7))
          (:box
           (:type :function)
           (:reference om-)
           (:group-id nil)
           (:name "om-")
           (:x 339)
           (:y 410)
           (:w 61)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 224)
           (:y 381)
           (:w 73)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference first-n)
           (:group-id nil)
           (:name "first-n")
           (:x 462)
           (:y 367)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 4")
           (:x 371)
           (:y 236)
           (:w 43)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value third)
           (:id 11))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux")
           (:x 332)
           (:y 228)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value <)
           (:id 12))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 352)
           (:y 276)
           (:w 80)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "test")
             (:value (:list quote <))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "key")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 10 :in 0))))))
       (:group-id nil)
       (:name "Correção SDIF")
       (:x 387/7)
       (:y 204)
       (:w 118)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "output") (:reactive nil))
        (:output (:name "output 2") (:reactive nil))
        (:output (:name "output 3") (:reactive nil)))
       (:id 11))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "CATANZARO - Extraindo Parciais de SDIF")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 163)
           (:y 502)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 48)
           (:y 46)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 2)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 242)
           (:y 202)
           (:w 67)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 195)
           (:y 444)
           (:w 80)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "omloop")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 12)
               (:y 5)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 484)
               (:y 481)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 874)
               (:y 339)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil)))
               (:id 2))
              (:box
               (:type :function)
               (:reference car)
               (:group-id nil)
               (:name "car")
               (:x 767)
               (:y 15)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :object)
               (:reference store)
               (:group-id nil)
               (:name "pointeur")
               (:x 862)
               (:y 0)
               (:w 80)
               (:h 50)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:showname t)
               (:lock :locked)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "SELF") (:reactive nil))
                (:output (:name "VALUE") (:reactive nil)))
               (:window (:size nil) (:position nil))
               (:edition-params)
               (:value
                (:object (:class store) (:slots ((:value 587.0)))))
               (:id 4))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "aux 3")
               (:x 970)
               (:y 54)
               (:w 44)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value value)
               (:id 5))
              (:box
               (:type :function)
               (:reference set-slot)
               (:group-id nil)
               (:name "set-slot")
               (:x 875)
               (:y 111)
               (:w 79)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SLOT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 624)
               (:y 153)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference seq)
               (:group-id nil)
               (:name "seq")
               (:x 494)
               (:y 337)
               (:w 58)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OP")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "op+")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "out") (:reactive nil))
                (:output (:name "op+1") (:reactive nil))
                (:output (:name "op+2") (:reactive nil))
                (:output (:name "op+3") (:reactive nil)))
               (:id 8))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 454)
               (:y 138)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 9))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "aux 2")
               (:x 169)
               (:y 235)
               (:w 44)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value value)
               (:id 10))
              (:box
               (:type :object)
               (:reference store)
               (:group-id nil)
               (:name "pointeur 2")
               (:x 108)
               (:y 217)
               (:w 80)
               (:h 50)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:showname t)
               (:lock :locked)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "SELF") (:reactive nil))
                (:output (:name "VALUE") (:reactive nil)))
               (:window (:size nil) (:position nil))
               (:edition-params)
               (:value
                (:object (:class store) (:slots ((:value 45.0D0)))))
               (:id 11))
              (:box
               (:type :function)
               (:reference get-slot)
               (:group-id nil)
               (:name "get-slot")
               (:x 158)
               (:y 287)
               (:w 80)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SLOT")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 12))
              (:box
               (:type :function)
               (:reference om=)
               (:group-id nil)
               (:name "om=")
               (:x 164)
               (:y 364)
               (:w 85)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 13))
              (:box
               (:type :function)
               (:reference omif)
               (:group-id nil)
               (:name "omif")
               (:x 264)
               (:y 403)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ACTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "else")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 14))
              (:box
               (:type :function)
               (:reference car)
               (:group-id nil)
               (:name "car")
               (:x 252)
               (:y 212)
               (:w 55)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 15))
              (:box
               (:type :special)
               (:reference init-do)
               (:group-id nil)
               (:name "init-do")
               (:x 21)
               (:y 422)
               (:w 56)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 16))
              (:box
               (:type :object)
               (:reference store)
               (:group-id nil)
               (:name "pointeur")
               (:x 8)
               (:y 120)
               (:w 80)
               (:h 50)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:showname t)
               (:lock :locked)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SELF")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "SELF") (:reactive nil))
                (:output (:name "VALUE") (:reactive nil)))
               (:window (:size nil) (:position nil))
               (:edition-params)
               (:value
                (:object (:class store) (:slots ((:value 0.0)))))
               (:id 17))
              (:box
               (:type :value)
               (:reference symbol)
               (:group-id nil)
               (:name "aux")
               (:x 114)
               (:y 158)
               (:w 44)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value value)
               (:id 18))
              (:box
               (:type :function)
               (:reference set-slot)
               (:group-id nil)
               (:name "set-slot")
               (:x 19)
               (:y 215)
               (:w 79)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "OBJECT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "SLOT")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "VALUE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 19))
              (:box
               (:type :function)
               (:reference caar)
               (:group-id nil)
               (:name "caar")
               (:x 73)
               (:y 96)
               (:w 62)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "X")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 20))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 384)
               (:y 481)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 21))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 242)
               (:y 36)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 22)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 20 :in 0)))
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 22 :in 0)))
              (:connection
               (:from (:box 2 :out 1))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 6 :in 2)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 6 :in 1)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 8 :in 3))
               (:attributes
                (:color
                 (:color 1.0S0 0.7529392S0 0.7960777S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 2 :in 0))
               (:attributes
                (:color
                 (:color 0.2 0.4 0.5 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 8 :in 0))
               (:attributes
                (:color
                 (:color 1.0S0 0.6470585S0 0.0S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 2 :in 1))
               (:attributes
                (:color
                 (:color 0.9 0.3 0.3 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 14 :in 2)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 8 :in 2))
               (:attributes
                (:color
                 (:color 1.0S0 0.0S0 0.0S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 14 :in 1))
               (:attributes
                (:color
                 (:color 0.0S0 0.0S0 1.0S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 9 :out 1))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 9 :out 2))
               (:to (:box 8 :in 1))
               (:attributes
                (:color
                 (:color 0.0S0 1.0S0 0.0S0 1.0)
                 :style
                 nil
                 :modif
                 nil)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 12 :in 1)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 13 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 21 :in 0)))
              (:connection
               (:from (:box 15 :out 0))
               (:to (:box 13 :in 1)))
              (:connection
               (:from (:box 17 :out 0))
               (:to (:box 19 :in 0)))
              (:connection
               (:from (:box 18 :out 0))
               (:to (:box 19 :in 1)))
              (:connection
               (:from (:box 19 :out 0))
               (:to (:box 16 :in 0)))
              (:connection
               (:from (:box 20 :out 0))
               (:to (:box 19 :in 2)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 22 :out 0))
               (:to (:box 15 :in 0))))))
           (:group-id nil)
           (:name "omloop")
           (:x 209)
           (:y 366)
           (:w 79)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 4))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "elegante map car")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input0")
                 (:doc "")))
               (:group-id nil)
               (:name "input0")
               (:x 5)
               (:y 0)
               (:w 56)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input1")
                 (:doc "")))
               (:group-id nil)
               (:name "input1")
               (:x 292)
               (:y -8)
               (:w 56)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 454)
               (:y 466)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux")
               (:x 352)
               (:y 403)
               (:w 32)
               (:h 30)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 3))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 340)
               (:y 433)
               (:w 56)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "level")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference mapcar)
               (:group-id nil)
               (:name "mapcar")
               (:x 222)
               (:y 268)
               (:w 79)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "FUNCTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference x-append)
               (:group-id nil)
               (:name "x-append")
               (:x 355)
               (:y 178)
               (:w 90)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda :lambda)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "L1?")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "L2?")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 250)
               (:y 362)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 7))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 203)
               (:y 483)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 8))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 312)
               (:y 77)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 9))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 29)
               (:y 77)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 10)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 7 :out 1))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 6 :in 1)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 5 :in 1))))))
           (:group-id nil)
           (:name "elegante map car")
           (:x 92)
           (:y 203)
           (:w 134)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input0")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input1")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference sort-list)
           (:group-id nil)
           (:name "sort-list")
           (:x 151)
           (:y 306)
           (:w 106)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :key)
             (:name "test")
             (:value (:list quote <))
             (:reactive nil))
            (:input
             (:type :key)
             (:name "key")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 5")
           (:x 192)
           (:y 270)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value <)
           (:id 7))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 4")
           (:x 229)
           (:y 269)
           (:w 40)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value first)
           (:id 8))
          (:box
           (:type :function)
           (:reference getsdifdata)
           (:group-id nil)
           (:name "getsdifdata")
           (:x 42)
           (:y 136)
           (:w 346)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SID")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "FRAMETYPE")
             (:value "")
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MATTYPE")
             (:value "")
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CNUM")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "RMIN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "RMAX")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TMIN")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "TMAX")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "out0") (:reactive nil))
            (:output (:name "out1") (:reactive nil)))
           (:id 9))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 108)
           (:y 102)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 10))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "aux 2")
           (:x 143)
           (:y 102)
           (:w 55)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "1TRC")
           (:id 11))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "aux 3")
           (:x 206)
           (:y 48)
           (:w 55)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 0 1 2))
           (:id 12)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 2)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 9 :out 1)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 9 :out 1)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 2)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 3)))
          (:connection
           (:from (:box 12 :out 0))
           (:to (:box 9 :in 4))))))
       (:group-id nil)
       (:name "CATANZARO - Extraindo Parciais de SDIF")
       (:x 686/3)
       (:y 809/9)
       (:w 265)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "output") (:reactive nil))
        (:output (:name "output 2") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference mapcar)
       (:group-id nil)
       (:name "mapcar")
       (:x 97)
       (:y 150)
       (:w 79)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FUNCTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "Ordem e approx para MAX-MSP")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 286)
           (:y 483)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 288)
           (:y 17)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 297)
           (:y 275)
           (:w 32)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 7)
           (:id 2))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 257)
           (:y 306)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "decimals")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 116)
           (:y 448)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 129)
           (:y 337)
           (:w 44)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1000)
           (:id 5))
          (:box
           (:type :function)
           (:reference om*)
           (:group-id nil)
           (:name "om*")
           (:x 94)
           (:y 373)
           (:w 63)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 326)
           (:y 414)
           (:w 90)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference third)
           (:group-id nil)
           (:name "third")
           (:x 395)
           (:y 225)
           (:w 64)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference second)
           (:group-id nil)
           (:name "second")
           (:x 239)
           (:y 242)
           (:w 77)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference fourth)
           (:group-id nil)
           (:name "fourth")
           (:x 35)
           (:y 220)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 266)
           (:y 116)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 2)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 0)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 10 :in 0))))))
       (:group-id nil)
       (:name "Ordem e approx para MAX-MSP")
       (:x 26)
       (:y 44)
       (:w 212)
       (:h 66)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda :lambda)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 14))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "sem substituição")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 390)
           (:y 377)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 50)
           (:y 50)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 2")
             (:index 2)
             (:doc nil)))
           (:group-id nil)
           (:name "output 2")
           (:x 94)
           (:y 295)
           (:w 67)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 522)
           (:y 131)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
           (:group-id nil)
           (:name "input 3")
           (:x 662)
           (:y 109)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 3")
             (:index 3)
             (:doc nil)))
           (:group-id nil)
           (:name "output 3")
           (:x 561)
           (:y 382)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 5))
          (:box
           (:type :function)
           (:reference mc->f)
           (:group-id nil)
           (:name "mc->f")
           (:x 461)
           (:y 285)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MIDICS?")
             (:value 6000)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference om*)
           (:group-id nil)
           (:name "om*")
           (:x 513)
           (:y 209)
           (:w 63)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference dx->x)
           (:group-id nil)
           (:name "dx->x")
           (:x 593)
           (:y 225)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "START")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "LIST")
             (:value (:list 1 1))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 582)
           (:y 110)
           (:w 60)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference x->dx)
           (:group-id nil)
           (:name "x->dx")
           (:x 402)
           (:y 199)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value (:list 0 1))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :function)
           (:reference f->mc)
           (:group-id nil)
           (:name "f->mc")
           (:x 379)
           (:y 107)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "FREQ")
             (:value 440)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :function)
           (:reference mat-trans)
           (:group-id nil)
           (:name "mat-trans")
           (:x 803/7)
           (:y 98)
           (:w 93)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "MATRIX")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 12))
          (:box
           (:type :function)
           (:reference second)
           (:group-id nil)
           (:name "second")
           (:x 1202/7)
           (:y 163)
           (:w 77)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 0 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 2 :in 0)))
          (:connection
           (:from (:box 13 :out 0))
           (:to (:box 11 :in 0))))))
       (:group-id nil)
       (:name "sem substituição")
       (:x 941/2)
       (:y 695/2)
       (:w 131)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 3")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "output") (:reactive nil))
        (:output (:name "output 2") (:reactive nil))
        (:output (:name "output 3") (:reactive nil)))
       (:id 15))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "valiadação")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (823 637)) (:position (52 48)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input 5") (:doc "")))
           (:group-id nil)
           (:name "input 5")
           (:x 575)
           (:y 236)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 6") (:doc "")))
           (:group-id nil)
           (:name "input 6")
           (:x 338)
           (:y 6)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 321)
           (:y 481)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "input 7") (:doc "")))
           (:group-id nil)
           (:name "input 7")
           (:x 444)
           (:y 13)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 123)
           (:y 74)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :function)
           (:reference print)
           (:group-id nil)
           (:name "print")
           (:x 170)
           (:y 482)
           (:w 64)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SOMETHING")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 4")
           (:x 484)
           (:y 263)
           (:w 34)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value .txt)
           (:id 6))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux")
           (:x 336)
           (:y 451)
           (:w 44)
           (:h 30)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value finish)
           (:id 7))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 412)
           (:y 340)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (lista)"
               ""
               "(defun numlist-to-string (lst)"
               "  (when lst"
               "    (concatenate 'string "
               "                 (write-to-string (car lst)) (numlist-to-string (cdr lst)))))"
               "(numlist-to-string lista))"
               ""
               ";; Código de \"https://gist.github.com/tompurl/5174818\""))))
           (:group-id nil)
           (:name "lispfunction 4")
           (:x 280)
           (:y 308)
           (:w 112)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LISTA")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "OM->COLL MAX")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 65)
               (:y 11)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 411)
               (:y 122)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 440)
               (:y 472)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 405)
               (:y 307)
               (:w 56)
               (:h 30)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 387)
               (:y 387)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 4))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "float")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output")
                     (:index 1)
                     (:doc nil)))
                   (:group-id nil)
                   (:name "output")
                   (:x 205)
                   (:y 474)
                   (:w 58)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 50)
                   (:y 57)
                   (:w 50)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 341)
                   (:y 129)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 2))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:patch
                     (:name "OMLOOP 2")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:grid nil)
                     (:lock nil)
                     (:boxes
                      (:box
                       (:type :io)
                       (:reference
                        (:in
                         (:type omin)
                         (:index 1)
                         (:name "input")
                         (:doc "")))
                       (:group-id nil)
                       (:name "input")
                       (:x 5)
                       (:y 5)
                       (:w 50)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs)
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 0))
                      (:box
                       (:type :io)
                       (:reference
                        (:in
                         (:type omin)
                         (:index 2)
                         (:name "input 2")
                         (:doc "")))
                       (:group-id nil)
                       (:name "input 2")
                       (:x 73)
                       (:y 5)
                       (:w 59)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs)
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 1))
                      (:box
                       (:type :io)
                       (:reference
                        (:out
                         (:type omout)
                         (:name "output 1")
                         (:index 1)
                         (:doc "")))
                       (:group-id nil)
                       (:name "output 1")
                       (:x 272)
                       (:y 373)
                       (:w 68)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "out-value")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs)
                       (:id 2))
                      (:box
                       (:type :function)
                       (:reference mc->f)
                       (:group-id nil)
                       (:name "mc->f")
                       (:x 204)
                       (:y 158)
                       (:w 72)
                       (:h 30)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "MIDICS?")
                         (:value 6000)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 3))
                      (:box
                       (:type :function)
                       (:reference om+)
                       (:group-id nil)
                       (:name "om+")
                       (:x 130)
                       (:y 181)
                       (:w 65)
                       (:h 30)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "ARG1")
                         (:value 0)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "ARG2")
                         (:value 0)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 4))
                      (:box
                       (:type :function)
                       (:reference f->mc)
                       (:group-id nil)
                       (:name "f->mc")
                       (:x 40)
                       (:y 211)
                       (:w 72)
                       (:h 30)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "FREQ")
                         (:value 440)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 5))
                      (:box
                       (:type :function)
                       (:reference x-append)
                       (:group-id nil)
                       (:name "x-append")
                       (:x 291)
                       (:y 182)
                       (:w 90)
                       (:h 30)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "L1?")
                         (:value nil)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "L2?")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 6))
                      (:box
                       (:type :special)
                       (:reference collect)
                       (:group-id nil)
                       (:name "collect")
                       (:x 228)
                       (:y 305)
                       (:w 57)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.7 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "data-in")
                         (:value nil)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "push")
                         (:value t)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "init")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "collect") (:reactive nil))
                        (:output (:name "data-out") (:reactive nil))
                        (:output (:name "init") (:reactive nil)))
                       (:id 7))
                      (:box
                       (:type :function)
                       (:reference second)
                       (:group-id nil)
                       (:name "second")
                       (:x 324)
                       (:y 39)
                       (:w 77)
                       (:h 30)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "LIST")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 8))
                      (:box
                       (:type :function)
                       (:reference first)
                       (:group-id nil)
                       (:name "first")
                       (:x 47)
                       (:y 160)
                       (:w 60)
                       (:h 30)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align nil)
                       (:icon :left)
                       (:lock nil)
                       (:lambda nil)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "LIST")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 9))
                      (:box
                       (:type :special)
                       (:reference iterate)
                       (:group-id nil)
                       (:name "iterate")
                       (:x 172)
                       (:y 373)
                       (:w 57)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.85 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "action")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs)
                       (:id 10))
                      (:box
                       (:type :special)
                       (:reference loop-list)
                       (:group-id nil)
                       (:name "list-loop")
                       (:x 14)
                       (:y 80)
                       (:w 64)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.85 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "list")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs (:output (:name "i") (:reactive nil)))
                       (:id 11)))
                     (:connections
                      (:connection
                       (:from (:box 0 :out 0))
                       (:to (:box 11 :in 0)))
                      (:connection
                       (:from (:box 1 :out 0))
                       (:to (:box 4 :in 1)))
                      (:connection
                       (:from (:box 3 :out 0))
                       (:to (:box 6 :in 0)))
                      (:connection
                       (:from (:box 4 :out 0))
                       (:to (:box 3 :in 0)))
                      (:connection
                       (:from (:box 5 :out 0))
                       (:to (:box 4 :in 0)))
                      (:connection
                       (:from (:box 6 :out 0))
                       (:to (:box 7 :in 0)))
                      (:connection
                       (:from (:box 7 :out 0))
                       (:to (:box 10 :in 0)))
                      (:connection
                       (:from (:box 7 :out 1))
                       (:to (:box 2 :in 0)))
                      (:connection
                       (:from (:box 8 :out 0))
                       (:to (:box 6 :in 1)))
                      (:connection
                       (:from (:box 9 :out 0))
                       (:to (:box 5 :in 0)))
                      (:connection
                       (:from (:box 11 :out 0))
                       (:to (:box 8 :in 0)))
                      (:connection
                       (:from (:box 11 :out 0))
                       (:to (:box 9 :in 0))))))
                   (:group-id nil)
                   (:name "OMLOOP 2")
                   (:x 305)
                   (:y 301)
                   (:w 97)
                   (:h 48)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "input")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "input 2")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "output 1") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:patch
                     (:name "OMLOOP")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:grid nil)
                     (:lock nil)
                     (:boxes
                      (:box
                       (:type :io)
                       (:reference
                        (:in
                         (:type omin)
                         (:index 1)
                         (:name "input")
                         (:doc "")))
                       (:group-id nil)
                       (:name "input")
                       (:x 94)
                       (:y 20)
                       (:w 50)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs)
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 0))
                      (:box
                       (:type :io)
                       (:reference
                        (:out
                         (:type omout)
                         (:name "output 1")
                         (:index 1)
                         (:doc "")))
                       (:group-id nil)
                       (:name "output 1")
                       (:x 294)
                       (:y 365)
                       (:w 68)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                         (:t-or-nil t)))
                       (:border 0)
                       (:roundness 0)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "out-value")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs)
                       (:id 1))
                      (:box
                       (:type :special)
                       (:reference collect)
                       (:group-id nil)
                       (:name "collect")
                       (:x 224)
                       (:y 194)
                       (:w 57)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.7 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "data-in")
                         (:value nil)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "push")
                         (:value t)
                         (:reactive nil))
                        (:input
                         (:type :standard)
                         (:name "init")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "collect") (:reactive nil))
                        (:output (:name "data-out") (:reactive nil))
                        (:output (:name "init") (:reactive nil)))
                       (:id 2))
                      (:box
                       (:type :abstraction)
                       (:reference
                        (:textfun
                         (:name "lispfunction")
                         (:doc "")
                         (:info
                          (:created nil)
                          (:modified nil)
                          (:by *app-name*)
                          (:version 0))
                         (:window (:size nil) (:position nil))
                         (:text
                          (:list
                           "(lambda (x) (loop for y in x collect (format nil \"~f\" y)))"))))
                       (:group-id nil)
                       (:name "lispfunction")
                       (:x 223)
                       (:y 77)
                       (:w 102)
                       (:h 48)
                       (:color nil)
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:display :mini-view)
                       (:lock nil)
                       (:lambda nil)
                       (:pre-delay 0)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "X")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs
                        (:output (:name "out") (:reactive nil)))
                       (:id 3))
                      (:box
                       (:type :special)
                       (:reference iterate)
                       (:group-id nil)
                       (:name "iterate")
                       (:x 194)
                       (:y 365)
                       (:w 57)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.85 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "action")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs)
                       (:id 4))
                      (:box
                       (:type :special)
                       (:reference loop-list)
                       (:group-id nil)
                       (:name "list-loop")
                       (:x 99)
                       (:y 95)
                       (:w 64)
                       (:h 42)
                       (:color
                        (:color-or-nil
                         (:color (:color 0.82 0.85 0.7 1.0))
                         (:t-or-nil t)))
                       (:border nil)
                       (:roundness nil)
                       (:text-font nil)
                       (:align :center)
                       (:icon :top)
                       (:inputs
                        (:input
                         (:type :standard)
                         (:name "list")
                         (:value nil)
                         (:reactive nil)))
                       (:outputs (:output (:name "i") (:reactive nil)))
                       (:id 5)))
                     (:connections
                      (:connection
                       (:from (:box 0 :out 0))
                       (:to (:box 5 :in 0)))
                      (:connection
                       (:from (:box 2 :out 0))
                       (:to (:box 4 :in 0)))
                      (:connection
                       (:from (:box 2 :out 1))
                       (:to (:box 1 :in 0)))
                      (:connection
                       (:from (:box 3 :out 0))
                       (:to (:box 2 :in 0)))
                      (:connection
                       (:from (:box 5 :out 0))
                       (:to (:box 3 :in 0))))))
                   (:group-id nil)
                   (:name "OMLOOP")
                   (:x 131)
                   (:y 293)
                   (:w 86)
                   (:h 48)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "input")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "output 1") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :value)
                   (:reference simple-base-string)
                   (:group-id nil)
                   (:name "aux 8")
                   (:x 192)
                   (:y 334)
                   (:w 34)
                   (:h 30)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value ";")
                   (:id 5))
                  (:box
                   (:type :value)
                   (:reference simple-base-string)
                   (:group-id nil)
                   (:name "aux 7")
                   (:x 85)
                   (:y 288)
                   (:w 33)
                   (:h 30)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value ",")
                   (:id 6))
                  (:box
                   (:type :function)
                   (:reference x-append)
                   (:group-id nil)
                   (:name "x-append")
                   (:x 118)
                   (:y 379)
                   (:w 90)
                   (:h 30)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "L1?")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "L2?")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :optional)
                     (:name "lst?")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :optional)
                     (:name "lst?")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 7))
                  (:box
                   (:type :function)
                   (:reference length)
                   (:group-id nil)
                   (:name "length")
                   (:x 207)
                   (:y 50)
                   (:w 73)
                   (:h 30)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 8))
                  (:box
                   (:type :value)
                   (:reference fixnum)
                   (:group-id nil)
                   (:name "aux")
                   (:x 263)
                   (:y 109)
                   (:w 32)
                   (:h 30)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:lock nil)
                   (:inputs)
                   (:outputs (:output (:name "value") (:reactive nil)))
                   (:value 1)
                   (:id 9))
                  (:box
                   (:type :function)
                   (:reference om-)
                   (:group-id nil)
                   (:name "om-")
                   (:x 253)
                   (:y 139)
                   (:w 61)
                   (:h 30)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ARG1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ARG2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 10))
                  (:box
                   (:type :function)
                   (:reference first)
                   (:group-id nil)
                   (:name "first")
                   (:x 50)
                   (:y 290)
                   (:w 60)
                   (:h 30)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LIST")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 11))
                  (:box
                   (:type :function)
                   (:reference last-n)
                   (:group-id nil)
                   (:name "last-n")
                   (:x 216)
                   (:y 189)
                   (:w 70)
                   (:h 30)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LIST")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "N")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 12)))
                 (:connections
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 8 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 11 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 12 :in 0)))
                  (:connection
                   (:from (:box 2 :out 0))
                   (:to (:box 3 :in 1)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 4 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 7 :in 2)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 7 :in 3)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 7 :in 1)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 0 :in 0)))
                  (:connection
                   (:from (:box 8 :out 0))
                   (:to (:box 10 :in 0)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 10 :in 1)))
                  (:connection
                   (:from (:box 10 :out 0))
                   (:to (:box 12 :in 1)))
                  (:connection
                   (:from (:box 11 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 12 :out 0))
                   (:to (:box 3 :in 0))))))
               (:group-id nil)
               (:name "float")
               (:x 4847/12)
               (:y 232)
               (:w 63)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 340)
               (:y 472)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 363)
               (:y 163)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 5 :in 1)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 4 :out 1))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 5 :in 0))))))
           (:group-id nil)
           (:name "OM->COLL MAX")
           (:x 105)
           (:y 283)
           (:w 127)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 10))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 144)
           (:y 529)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 11))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 308)
           (:y 153)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 12))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 427)
           (:y 222)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference save-as-text)
           (:group-id nil)
           (:name "save-as-text")
           (:x 151)
           (:y 395)
           (:w 107)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "path")
             (:value "data")
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 12 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 11 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 2)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 14 :in 1)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 8 :in 1)))
          (:connection
           (:from (:box 14 :out 0))
           (:to (:box 5 :in 0))))))
       (:group-id nil)
       (:name "valiadação")
       (:x 326)
       (:y 569)
       (:w 170)
       (:h 58)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input 5")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 6")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 7")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 666)
       (:y 500)
       (:w 61)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:comment
       (:x 797)
       (:y 359)
       (:w 157)
       (:h 44)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "Fundamental of the timbre
")
       (:id 18))
      (:comment
       (:x 742)
       (:y 502)
       (:w 173)
       (:h 48)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Transposition of all partials.")
       (:id 19))
      (:comment
       (:x 165)
       (:y 211)
       (:w 229)
       (:h 67)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text
        "SDIF has a problem that causes one of the lists to have more than 3 parameters (amplitude, time, frequency).")
       (:id 20))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 7")
       (:x 1025/2)
       (:y 635/2)
       (:w 32)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 21)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 12 :in 0)))
      (:connection
       (:from (:box 2 :out 0))
       (:to (:box 16 :in 1))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 17 :in 1)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 16 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 5 :out 0))
       (:to (:box 16 :in 3))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 5 :in 0))
       (:attributes
        (:color (:color 0.9 0.3 0.3 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 9 :out 0))
       (:to (:box 5 :in 2))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 10 :out 0))
       (:to (:box 5 :in 1))
       (:attributes
        (:color
         (:color 1.0S0 0.6470585S0 0.0S0 1.0)
         :style
         nil
         :modif
         nil)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 0)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 9 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 10 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 15 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 12 :out 0))
       (:to (:box 13 :in 1))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 13 :out 0))
       (:to (:box 11 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 14 :out 0))
       (:to (:box 13 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 5 :in 3))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 1 :in 0)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 16 :in 2))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 15 :in 1))))))
   (:group-id nil)
   (:name "TRANSPOSIÇÃO PARA MAX/MSP-COLL")
   (:x 903)
   (:y 603)
   (:w 259)
   (:h 66)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "SDIF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "area de afinação")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "fundamental do timbre")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "name")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 15))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 374)
   (:y 71)
   (:w 72)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value (:list 0 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 110)
   (:y 127)
   (:w 93)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 14")
   (:x 173)
   (:y 56)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 13")
   (:x 140)
   (:y 56)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 19))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 118)
   (:y 96)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 4)
   (:y 155)
   (:w 255)
   (:h 92)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size (581 400)) (:position (130 130)))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 1000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points (:list 0 100 200 300 400 500 600 700 800 900 1000))
       (:y-points (:list 4 3 1 4 2 2 3 1 2 1 5))))
     (:add-slots ((:name "BPF")))))
   (:id 21))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 169)
   (:y 523)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 22))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "densidade")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (929 630)) (:position (52 48)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 55)
       (:y 8)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 105)
       (:y 6)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 203)
       (:y 589)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 187)
       (:y 11)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 5") (:doc "")))
       (:group-id nil)
       (:name "input 5")
       (:x 230)
       (:y 13)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 5) (:name "input 4") (:doc "")))
       (:group-id nil)
       (:name "input 4")
       (:x 295)
       (:y 16)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 6) (:name "input 6") (:doc "")))
       (:group-id nil)
       (:name "input 6")
       (:x 377)
       (:y 26)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference remove-dup)
       (:group-id nil)
       (:name "remove-dup")
       (:x 205)
       (:y 376)
       (:w 105)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 1 2 3 4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEST")
         (:value eq)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "DEPTH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "meio 2")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 5)
           (:y 5)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 212)
           (:y 56)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 171)
           (:y 527)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :function)
           (:reference first-n)
           (:group-id nil)
           (:name "first-n")
           (:x 127)
           (:y 240)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference permut-random)
           (:group-id nil)
           (:name "permut-random")
           (:x 15)
           (:y 80)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 143)
           (:y 394)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 5))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 51)
           (:y 525)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 6))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 210)
           (:y 138)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 7)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 5 :out 1)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 3 :in 1))))))
       (:group-id nil)
       (:name "meio 2")
       (:x 220)
       (:y 142)
       (:w 76)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 8))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "grave")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 5)
           (:y 5)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 305)
           (:y 44)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 171)
           (:y 527)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :function)
           (:reference first-n)
           (:group-id nil)
           (:name "first-n")
           (:x 277)
           (:y 300)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference permut-random)
           (:group-id nil)
           (:name "permut-random")
           (:x 15)
           (:y 80)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 143)
           (:y 394)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 5))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 51)
           (:y 525)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 6))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 288)
           (:y 144)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 7)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 5 :out 1)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 3 :in 1))))))
       (:group-id nil)
       (:name "grave")
       (:x 51)
       (:y 131)
       (:w 69)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 9))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "meio")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 5)
           (:y 5)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 212)
           (:y 56)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 171)
           (:y 527)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 2))
          (:box
           (:type :function)
           (:reference first-n)
           (:group-id nil)
           (:name "first-n")
           (:x 127)
           (:y 240)
           (:w 72)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "N")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :function)
           (:reference permut-random)
           (:group-id nil)
           (:name "permut-random")
           (:x 15)
           (:y 80)
           (:w 125)
           (:h 30)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 143)
           (:y 394)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 5))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 51)
           (:y 525)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 6))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 210)
           (:y 138)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 7)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 5 :out 1)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 3 :in 1))))))
       (:group-id nil)
       (:name "meio")
       (:x 116)
       (:y 133)
       (:w 65)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 10))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 160)
       (:y 501)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 83)
       (:y 327)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 116)
       (:y 593)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 13))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 176)
       (:y 224)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 14))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 50)
       (:y 228)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 15))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 106)
       (:y 227)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 16)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 11 :out 1)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 12 :in 1))))))
   (:group-id nil)
   (:name "densidade")
   (:x 15)
   (:y 289)
   (:w 133)
   (:h 58)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 5")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 4")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 6")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 23))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Sieve")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1366 725)) (:position (-8 -8)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 43)
       (:y 540)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 2")
       (:x 185)
       (:y 126)
       (:w 74)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 19 16 64))
       (:id 1))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 106)
       (:y 125)
       (:w 74)
       (:h 30)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 11 16 64))
       (:id 2))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference c-union)
       (:group-id nil)
       (:name "c-union")
       (:x 98)
       (:y 246)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CRIBLE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:library "Mathtools")
       (:type :object)
       (:reference crible)
       (:group-id nil)
       (:name "CRIBLE 6")
       (:x 86)
       (:y 163)
       (:w 70)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CR-EXP")
         (:value (:list 2 0 18))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CR-EXP") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object (:class crible) (:slots ((:cr-exp (:list 5 3 37))))))
       (:id 4))
      (:box
       (:library "Mathtools")
       (:type :object)
       (:reference crible)
       (:group-id nil)
       (:name "CRIBLE 5")
       (:x 162)
       (:y 165)
       (:w 70)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:showname t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CR-EXP")
         (:value (:list 2 0 18))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CR-EXP") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object (:class crible) (:slots ((:cr-exp (:list 3 19 24))))))
       (:id 5))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference revel-crible)
       (:group-id nil)
       (:name "revel-crible")
       (:x 81)
       (:y 305)
       (:w 100)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 193)
       (:y 440)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 235)
       (:y 405)
       (:w 114)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 69 73 79 83 97))
       (:id 8)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1))))))
   (:group-id nil)
   (:name "Sieve")
   (:x 377)
   (:y 0)
   (:w 68)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 24))
  (:box
   (:type :object)
   (:reference sdiffile)
   (:group-id nil)
   (:name nil)
   (:x 871)
   (:y 534)
   (:w 136)
   (:h 50)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :hidden)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value :choose-file)
     (:reactive nil)))
   (:outputs (:output (:name "SELF") (:reactive nil)))
   (:window (:size (1366 725)) (:position (-8 -8)))
   (:edition-params)
   (:value
    (:object
     (:class sdiffile)
     (:add-slots
      ((:file-map
        (:list
         (:fstream-desc
          (:id 0)
          (:fsig "1TRC")
          (:tmin 0.0D0)
          (:tmax 2.7730002403259278D0)
          (:nf 2774)
          (:matrices
           (:list
            (:mstream-desc
             (:msig "1TRC")
             (:fields ("Index" "Frequency" "Amplitude" "Phase"))
             (:rmax 180)
             (:tmin 0.0D0)
             (:tmax 2.7730002403259278D0)
             (:nf 2774)))))))
       (:file-pathname
        (:pathname
         (:directory
          (:relative
           :back
           :back
           "Documentos"
           "OM - Workspace"
           "in-files"))
         (:device nil)
         (:host "C")
         (:name "Violino - Arco passando nas cordas")
         (:type "sdif")))))))
   (:id 25))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 449)
   (:y 43)
   (:w 132)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 26))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 461)
   (:y 10)
   (:w 146)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 11 19 97 1997 53 49))
   (:id 27))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference cps->identity)
   (:group-id nil)
   (:name "cps->identity")
   (:x 745)
   (:y 226)
   (:w 113)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CPS")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 28))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name nil)
   (:x 11)
   (:y 390)
   (:w 317)
   (:h 114)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list (:list 1000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value 100)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil)))
   (:window (:size (650 300)) (:position (26 26)))
   (:edition-params (:scale :scale-1/8))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 11000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name nil)
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list
          6000
          6917
          6781
          6595
          7541
          8117
          7964
          7200
          8741
          8995
          9181
          9164)
         (:list 6781 6917 6764 8117 7541 7981 9317 8995 8741)
         (:list 6917 8117 9181)
         (:list
          6764
          6781
          6917
          6000
          7541
          7200
          7981
          8117
          9164
          9181
          8400
          8995)
         (:list 6000 6341 7964 8117 8400 9181)
         (:list 6000 6917 7541 7795 8741 8995)
         (:list 6781 6000 6595 7200 7795 8117 8741 8400 9164)
         (:list 6781 7541 9181)
         (:list 6917 6341 7200 7981 9317 9181)
         (:list 6595 7981 8400)
         (:list
          6595
          6000
          6764
          6917
          6341
          7541
          7964
          7981
          8117
          7795
          9164
          8995
          8400
          8741
          9181)))
       (:lonset
        (:list
         0
         1000
         2000
         3000
         4000
         5000
         6000
         7000
         8000
         9000
         10000
         11000))
       (:ldur
        (:list
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000)
         (:list 1000 1000 1000 1000 1000 1000)
         (:list 1000 1000 1000)
         (:list
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000
          1000)))
       (:lvel
        (:list
         (:list 100 100 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100)
         (:list
          100
          100
          100
          100
          100
          100
          100
          100
          100
          100
          100
          100
          100
          100
          100)))
       (:loffset
        (:list
         (:list 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)))
       (:lport
        (:list
         (:list nil nil nil nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil nil nil)
         (:list nil nil nil)
         (:list
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil
          nil)))
       (:llegato nil)))))
   (:id 29))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name nil)
   (:x 332)
   (:y 393)
   (:w 608)
   (:h 119)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname t)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil)))
   (:window (:size (1047 300)) (:position (150 61)))
   (:edition-params
    (:scale :scale-1/8)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 15.4)
      (:list 4000 43.9)
      (:list 8000 68.7)
      (:list 12000 96.6)
      (:list 16000 124.4)
      (:list 20000 148.4)
      (:list 24000 175.5)
      (:list 28000 201.1)
      (:list 32000 223.6)
      (:list 36000 246.90001))))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 39999)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         10
         (:list
          (:list (:list 4 4) (:list 4))
          (:list (:list 4 4) (:list 4))
          (:list (:list 4 4) (:list 4))
          (:list (:list 4 4) (:list 4))
          (:list (:list 4 4) (:list 4))
          (:list (:list 4 4) (:list 4))
          (:list (:list 4 4) (:list 4))
          (:list (:list 4 4) (:list 4))
          (:list (:list 4 4) (:list 4))
          (:list (:list 4 4) (:list 4)))))
       (:lmidic
        (:list
         (:list
          6341
          6781
          6595
          6000
          7964
          7541
          7981
          7795
          9164
          8741
          8995
          9317)
         (:list 6781 6595 6764 7981 8117 7964 9317 8400 9181)
         (:list 6341 7200 9317)
         (:list
          6917
          6341
          6764
          6000
          7795
          8117
          7541
          7981
          8400
          9181
          8741
          8995)
         (:list 6595 6917 7981 7541 9164 9181)
         (:list 6917 6595 7981 8117 8995 9317)
         (:list 6341 6595 6764 7200 8117 7795 8995 9317 8741)
         (:list 6341 7795 8741)
         (:list 6917 6595 7200 7795 9164 9317)
         (:list 6341 7964 9164)))
       (:lonset
        (:list
         0
         4000
         8000
         12000
         16000
         20000
         24000
         28000
         32000
         36000
         40000))
       (:ldur
        (:list
         (:list
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999)
         (:list 3999 3999 3999 3999 3999 3999 3999 3999 3999)
         (:list 3999 3999 3999)
         (:list
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999
          3999)
         (:list 3999 3999 3999 3999 3999 3999)
         (:list 3999 3999 3999 3999 3999 3999)
         (:list 3999 3999 3999 3999 3999 3999 3999 3999 3999)
         (:list 3999 3999 3999)
         (:list 3999 3999 3999 3999 3999 3999)
         (:list 3999 3999 3999)))
       (:lvel
        (:list
         (:list 100 100 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100 100 100 100 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100 100 100 100)
         (:list 100 100 100)))
       (:loffset
        (:list
         (:list 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0 0 0 0 0 0 0)
         (:list 0 0 0)
         (:list 0 0 0 0 0 0)
         (:list 0 0 0)))
       (:lchan
        (:list
         (:list 1 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1 1 1 1 1 1 1)
         (:list 1 1 1)
         (:list 1 1 1 1 1 1)
         (:list 1 1 1)))
       (:lport
        (:list
         (:list nil nil nil nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil)
         (:list nil nil nil nil nil nil nil nil nil)
         (:list nil nil nil)
         (:list nil nil nil nil nil nil)
         (:list nil nil nil)))
       (:llegato nil)
       (:tempo 60)))))
   (:id 30))
  (:box
   (:type :special)
   (:reference repeat-n)
   (:group-id nil)
   (:name "repeat-n")
   (:x 373)
   (:y 331)
   (:w 89)
   (:h 28)
   (:color
    (:color-or-nil (:color (:color 0.82 0.85 0.7 1.0)) (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:icon :left)
   (:lock nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "self")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "num")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "collected results") (:reactive nil)))
   (:id 31))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 208)
   (:y 302)
   (:w 73)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 363)
   (:y 294)
   (:w 37)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 33))
  (:box
   (:type :function)
   (:reference mktree)
   (:group-id nil)
   (:name "mktree")
   (:x 519)
   (:y 334)
   (:w 77)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RHYTHM")
     (:value (:list 1/4 1/4 1/4 1/4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TIMESIGNS")
     (:value (:list 4 4))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference play-om\#)
   (:group-id nil)
   (:name "play-om#")
   (:x 311)
   (:y 534)
   (:w 187)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CKN")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 35))
  (:box
   (:type :function)
   (:reference om-)
   (:group-id nil)
   (:name "om-")
   (:x 211)
   (:y 336)
   (:w 61)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36)))
 (:connections
  (:connection (:from (:box 0 :out 0)) (:to (:box 1 :in 1)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 23 :in 5)))
  (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
  (:connection (:from (:box 3 :out 0)) (:to (:box 23 :in 4)))
  (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
  (:connection (:from (:box 5 :out 0)) (:to (:box 23 :in 3)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 1 :in 0)))
  (:connection (:from (:box 6 :out 0)) (:to (:box 3 :in 0)))
  (:connection
   (:from (:box 6 :out 0))
   (:to (:box 5 :in 0))
   (:attributes (:color nil :style nil :modif (0 -19/63))))
  (:connection (:from (:box 7 :out 0)) (:to (:box 8 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 15 :in 1))
   (:attributes (:color nil :style nil :modif (294/1357 0))))
  (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 15 :in 2)))
  (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 3)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 20 :in 0)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 21 :in 2)))
  (:connection (:from (:box 18 :out 0)) (:to (:box 20 :in 2)))
  (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 1)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 17 :in 0)))
  (:connection (:from (:box 21 :out 2)) (:to (:box 23 :in 0)))
  (:connection (:from (:box 21 :out 2)) (:to (:box 23 :in 1)))
  (:connection (:from (:box 21 :out 2)) (:to (:box 23 :in 2)))
  (:connection (:from (:box 22 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 29 :in 1)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 32 :in 0)))
  (:connection (:from (:box 23 :out 0)) (:to (:box 30 :in 2)))
  (:connection (:from (:box 24 :out 0)) (:to (:box 16 :in 0)))
  (:connection (:from (:box 25 :out 0)) (:to (:box 15 :in 0)))
  (:connection (:from (:box 26 :out 1)) (:to (:box 8 :in 0)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 26 :in 0)))
  (:connection (:from (:box 29 :out 1)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 30 :out 0)) (:to (:box 35 :in 0)))
  (:connection (:from (:box 31 :out 0)) (:to (:box 34 :in 0)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 36 :in 0)))
  (:connection (:from (:box 33 :out 0)) (:to (:box 31 :in 0)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 30 :in 1)))
  (:connection (:from (:box 36 :out 0)) (:to (:box 31 :in 1)))))