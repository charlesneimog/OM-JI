
(:patch
 (:om-version 0.049999997)
 (:name "Tonality-Diamond-identity")
 (:doc "")
 (:info
  (:created "2019/10/14 10:18:06")
  (:modified "2019/10/14 10:23:40"))
 (:window (:size (662 500)) (:position (598 48)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:box
   (:library "OM-Partch")
   (:type :function)
   (:reference tonality-diamond-identity)
   (:group-id nil)
   (:name "tonality-diamond-identity")
   (:x 13)
   (:y 73)
   (:w 163)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 7 11 17))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TONALITY")
     (:value 2)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:comment
   (:x 296)
   (:y 105)
   (:w 299)
   (:h 84)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "Faz o processo da tonalidade diamante com identidades selecionadas. Para compreender o processo da Identidade Diamante veja PARTCH (1974). ")
   (:id 1))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 26)
   (:y 13)
   (:w 61)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 7 11 17))
   (:id 2))
  (:box
   (:library "OM-Partch")
   (:type :function)
   (:reference ratio->mc)
   (:group-id nil)
   (:name "ratio->mc")
   (:x 95)
   (:y 163)
   (:w 85)
   (:h 30)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "RATIO")
     (:value (:list 1 11/8 7/4))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "FUNDAMENTAL")
     (:value 6000)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 135)
   (:y 128)
   (:w 42)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 4))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name nil)
   (:x 60)
   (:y 249)
   (:w 348)
   (:h 144)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:name nil)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:group-id nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list (:list 6000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list (:list 1000)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value 100)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil)))
   (:window (:size (650 300)) (:position (156 156)))
   (:edition-params (:scale :scale-1/8) (:staff :ggf))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 3000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:lmidic
        (:list
         (:list 6000 6782 7536)
         (:list 5218 6000 6754)
         (:list 4464 5246 6000)))
       (:lonset (:list 0 1000 2000 3000))
       (:ldur
        (:list
         (:list 1000 1000 1000)
         (:list 1000 1000 1000)
         (:list 1000 1000 1000)))
       (:lvel
        (:list
         (:list 100 100 100)
         (:list 100 100 100)
         (:list 100 100 100)))
       (:loffset (:list (:list 0 0 0) (:list 0 0 0) (:list 0 0 0)))
       (:lchan (:list (:list 1 1 1) (:list 1 1 1) (:list 1 1 1)))
       (:lport (:list nil nil nil))
       (:llegato nil)))
     (:add-slots
      ((:loffset (:list (:list 0 0 0) (:list 0 0 0) (:list 0 0 0)))
       (:lchan (:list (:list 1 1 1) (:list 1 1 1) (:list 1 1 1)))
       (:lport (:list nil nil nil))
       (:llegato nil)))))
   (:id 5))
  (:comment
   (:x 178)
   (:y 19)
   (:w 323)
   (:h 34)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Selecione 1 para U-tonality e 2 para O-tonality")
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 117)
   (:y 38)
   (:w 32)
   (:h 30)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 2)
   (:id 7)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 3 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 2 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 5 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 3 :in 1))
   (:attributes (:color nil :style nil :modif nil)))
  (:connection
   (:from (:box 7 :out 0))
   (:to (:box 0 :in 1))
   (:attributes (:color nil :style nil :modif nil)))))