
(:patch
 (:name "3.1.1. - Contrução de linhas melodicas partch CERTO")
 (:doc "")
 (:info
  (:created "2020/08/29 12:20:03")
  (:modified "2020/08/31 16:03:25")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1382 784)) (:position (-8 -8)))
 (:grid nil)
 (:lock t)
 (:boxes
  (:box
   (:type :function)
   (:reference om-)
   (:group-id nil)
   (:name "om-")
   (:x 1097)
   (:y 141)
   (:w 61)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 0))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "alea")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 164)
       (:y 88)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 50)
       (:y 50)
       (:w 103)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 92)
       (:y 117)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 0))))))
   (:group-id nil)
   (:name "alea")
   (:x 806)
   (:y 273/2)
   (:w 61)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 1))
  (:box
   (:type :object)
   (:reference textbuffer)
   (:group-id nil)
   (:name "TEXTFILE")
   (:x 1088)
   (:y 46)
   (:w 229)
   (:h 85)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:lock :locked)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CONTENTS")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :key)
     (:name "output-mode")
     (:value :list)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "CONTENTS") (:reactive nil))
    (:output (:name "output-mode") (:reactive nil)))
   (:window (:size (1100 102)) (:position (26 26)))
   (:edition-params (:output-mode :list))
   (:value
    (:object
     (:class textbuffer)
     (:slots
      ((:contents
        (:list
         "(-1) (1 -1) (3 1) (1 -2 1.) (1 -2 1) (-2 1) (-1 1 -1) (2 (2 (1 1 1))) (1 (1 (1 -1 1))) (3 2 1 1) (-1 2 -1 2 1)"
         ""))))
     (:add-slots ((:input-mode :lines-cols)))))
   (:id 2))
  (:box
   (:type :function)
   (:reference omif)
   (:group-id nil)
   (:name "omif")
   (:x 824)
   (:y 232)
   (:w 62)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "TEST")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ACTION")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :optional)
     (:name "else")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 3))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Construcao de perfil")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (966 639)) (:position (138 10)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 113)
       (:y 573)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 61)
       (:y 17)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 2) (:doc nil)))
       (:group-id nil)
       (:name "output 2")
       (:x 247)
       (:y 582)
       (:w 67)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:comment
       (:x 613)
       (:y 386)
       (:w 287)
       (:h 40)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 14) (:style :plain)))
       (:align nil)
       (:text "Esse patch varia o perfil aleatoriamente.")
       (:id 3))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 272)
       (:y 367)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 564)
       (:y 349)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 523)
       (:y 349)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 6))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 505)
       (:y 379)
       (:w 103)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 473)
       (:y 387)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 8))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 472)
       (:y 414)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference omif)
       (:group-id nil)
       (:name "omif")
       (:x 316)
       (:y 462)
       (:w 108)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference x->dx)
       (:group-id nil)
       (:name "x->dx")
       (:x 50)
       (:y 107)
       (:w 72)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 103)
       (:y 310)
       (:w 88)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 127)
       (:y 248)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 13))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 148)
       (:y 190)
       (:w 103)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 11")
       (:x 124)
       (:y 155)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7)
       (:id 15))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 12")
       (:x 188)
       (:y 160)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 13)
       (:id 16))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 209)
       (:y 315)
       (:w 79)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 42)
       (:y 444)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:comment
       (:x 253)
       (:y 193)
       (:w 228)
       (:h 31)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "se o perfil é mais aberto ou fechado")
       (:id 19))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 183)
       (:y 450)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:comment
       (:x 129)
       (:y 110)
       (:w 182)
       (:h 26)
       (:fgcolor nil)
       (:bgcolor nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:text "Contrução do perfil da sieve.")
       (:id 21)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 10 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 20 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 2)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 10 :in 1))))))
   (:group-id nil)
   (:name "Construcao de perfil")
   (:x 597/10)
   (:y 225)
   (:w 149)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output") (:reactive nil))
    (:output (:name "output 2") (:reactive nil)))
   (:id 4))
  (:box
   (:type :function)
   (:reference x-append)
   (:group-id nil)
   (:name "x-append")
   (:x 138)
   (:y 397)
   (:w 90)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "L1?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "L2?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 5))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF 2")
   (:x 159)
   (:y 300)
   (:w 169)
   (:h 79)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 1100)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points
        (:list 0 100 200 300 400 500 600 700 800 900 1000 1100))
       (:y-points (:list 6 5 11 3 8 11 6 5 10 3 7 10))))
     (:add-slots ((:name "BPF 2")))))
   (:id 6))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 21")
   (:x 974)
   (:y 45)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 7))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 20")
   (:x 927)
   (:y 46)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 1)
   (:id 8))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 915)
   (:y 77)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 9))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 19")
   (:x 785)
   (:y 49)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 11)
   (:id 10))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 18")
   (:x 730)
   (:y 51)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 11))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 717)
   (:y 78)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 12))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 17")
   (:x 520)
   (:y 377)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Dinâmicas")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 716)) (:position (155 0)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 252)
       (:y 571)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 21)
       (:y 42)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 96)
       (:y 44)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "lispfunction")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (972 480)) (:position (182 182)))
         (:text
          (:list
           "(lambda (list) (let ((L()))"
           "    (loop for x from 0 to (1- (length list)) do"
           "          (when (not (equal (nth (+ x 1) list) (nth x list)))"
           "            (push (nth x list) L)))"
           "    (reverse L))))"))))
       (:group-id nil)
       (:name "lispfunction")
       (:x 57)
       (:y 376)
       (:w 102)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 231)
       (:y 493)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "OMLOOP")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size (500 500)) (:position (26 22)))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 12)
           (:y 6)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 308)
           (:y 418)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :function)
           (:reference flat)
           (:group-id nil)
           (:name "flat")
           (:x 411)
           (:y 254)
           (:w 56)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 285)
           (:y 86)
           (:w 93)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 375)
           (:y 132)
           (:w 89)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 4))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 272)
           (:y 39)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 5)
           (:id 5))
          (:box
           (:type :function)
           (:reference om/)
           (:group-id nil)
           (:name "om/")
           (:x 262)
           (:y 69)
           (:w 60)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ARG1")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ARG2")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference length)
           (:group-id nil)
           (:name "length")
           (:x 216)
           (:y 21)
           (:w 73)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "list")
           (:x 347)
           (:y 28)
           (:w 79)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 4 3 1 4 2))
           (:id 8))
          (:box
           (:type :function)
           (:reference om-round)
           (:group-id nil)
           (:name "om-round")
           (:x 521)
           (:y 293)
           (:w 93)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "N")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 4")
           (:x 589)
           (:y 136)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 4)
           (:id 10))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 3")
           (:x 517)
           (:y 110)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 11))
          (:box
           (:type :value)
           (:reference cons)
           (:group-id nil)
           (:name "aux 2")
           (:x 467)
           (:y 20)
           (:w 93)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value (:list 11 8 3 11 5))
           (:id 12))
          (:box
           (:type :function)
           (:reference om-scale)
           (:group-id nil)
           (:name "om-scale")
           (:x 497)
           (:y 182)
           (:w 88)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "SELF")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MINOUT")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "MAXOUT")
             (:value 0)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 245)
           (:y 286)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 14))
          (:box
           (:type :special)
           (:reference repeat-n)
           (:group-id nil)
           (:name "repeat-n")
           (:x 207)
           (:y 185)
           (:w 89)
           (:h 28)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :left)
           (:lock nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "self")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "num")
             (:value 0)
             (:reactive nil)))
           (:outputs
            (:output (:name "collected results") (:reactive nil)))
           (:id 15))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 208)
           (:y 418)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 16))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 309)
           (:y 198)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 17))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 87)
           (:y 74)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 18)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 0 :out 0)) (:to (:box 18 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 2 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 14 :out 1)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 15 :in 1)))
          (:connection
           (:from (:box 18 :out 0))
           (:to (:box 15 :in 0))))))
       (:group-id nil)
       (:name "OMLOOP")
       (:x 226)
       (:y 413)
       (:w 86)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 249)
       (:y 217)
       (:w 79)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 216)
       (:y 105)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 7))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 161)
       (:y 16)
       (:w 103)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference om=)
       (:group-id nil)
       (:name "om=")
       (:x 206)
       (:y 135)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NUM1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "NUM2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference omif)
       (:group-id nil)
       (:name "omif")
       (:x 170)
       (:y 270)
       (:w 62)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "TEST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ACTION")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "else")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 81)
       (:y 331)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 244)
       (:y 299)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 12)
       (:id 12))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 214)
       (:y 329)
       (:w 89)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference first-n)
       (:group-id nil)
       (:name "first-n")
       (:x 87)
       (:y 144)
       (:w 72)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "N")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 10 :in 2)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 10 :in 1))))))
   (:group-id nil)
   (:name "Dinâmicas")
   (:x 467)
   (:y 403)
   (:w 95)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 8")
   (:x 978)
   (:y 127)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 11)
   (:id 15))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 901)
   (:y 168)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 16))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 834)
   (:y 77)
   (:w 79)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference om-round)
   (:group-id nil)
   (:name "om-round")
   (:x 784)
   (:y 267)
   (:w 93)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "N") (:value 1) (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 7")
   (:x 680)
   (:y 101)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 19))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 649)
   (:y 136)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 20))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "aux 2")
   (:x 1251)
   (:y 183)
   (:w 54)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list (:list 4 4)))
   (:id 21))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 406)
   (:y 157)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 1) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :function)
   (:reference length)
   (:group-id nil)
   (:name "length")
   (:x 426)
   (:y 99)
   (:w 73)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 239)
   (:y 474)
   (:w 79)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "diamante")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1366 725)) (:position (-8 -8)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 71)
       (:y 595)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 1)
         (:name "Lista de Razoes")
         (:doc "")))
       (:group-id nil)
       (:name "Lista de Razoes")
       (:x 238)
       (:y 31)
       (:w 102)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 2)
         (:name "nota de referencia da Afinação Justa")
         (:doc "")))
       (:group-id nil)
       (:name "nota de referencia da Afinação Justa")
       (:x 364)
       (:y 11)
       (:w 213)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "nota grave") (:doc "")))
       (:group-id nil)
       (:name "nota grave")
       (:x 58)
       (:y 439)
       (:w 78)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in
         (:type omin)
         (:index 4)
         (:name "nota mais aguda")
         (:doc "")))
       (:group-id nil)
       (:name "nota mais aguda")
       (:x 136)
       (:y 469)
       (:w 109)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 338)
       (:y 98)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 433)
       (:y 191)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7902)
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 387)
       (:y 191)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 7))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 545)
       (:y 334)
       (:w 65)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 591)
       (:y 286)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2400)
       (:id 9))
      (:comment
       (:x 635)
       (:y 283)
       (:w 102)
       (:h 38)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "acrescimo de uma oitava")
       (:id 10))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 328)
       (:y 372)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:comment
       (:x 24)
       (:y 342)
       (:w 100)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "filtro para instrumento acustico")
       (:id 12))
      (:comment
       (:x 578)
       (:y 237)
       (:w 102)
       (:h 38)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "acrescimo de uma oitava")
       (:id 13))
      (:comment
       (:x 184)
       (:y 270)
       (:w 100)
       (:h 32)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Temperamento ")
       (:id 14))
      (:comment
       (:x 23)
       (:y 228)
       (:w 92)
       (:h 40)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "aproximacao em cents")
       (:id 15))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 31)
       (:y 528)
       (:w 112)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 534)
       (:y 240)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1200)
       (:id 17))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 498)
       (:y 269)
       (:w 65)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 1200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 348)
       (:y 146)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 19))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 355)
       (:y 221)
       (:w 112)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 20))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference filter-ac-inst)
       (:group-id nil)
       (:name "filter-ac-inst")
       (:x 78)
       (:y 310)
       (:w 106)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6000 6530 7203 5049))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "APPROX")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPERAMENT")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 11")
       (:x 115)
       (:y 225)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 22))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 12")
       (:x 147)
       (:y 266)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 23))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 215)
       (:y 563)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 24)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
      (:connection
       (:from (:box 3 :out 0))
       (:to (:box 16 :in 1))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 4 :out 0))
       (:to (:box 16 :in 2))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 20 :in 2)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 20 :in 1)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 11 :in 2))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 1)))
      (:connection
       (:from (:box 11 :out 0))
       (:to (:box 21 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 24 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 1)))
      (:connection
       (:from (:box 18 :out 0))
       (:to (:box 11 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 20 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color
         (:color 0.0S0 0.0S0 1.0S0 1.0)
         :style
         nil
         :modif
         (0 12/47))))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 11 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 20 :out 0))
       (:to (:box 18 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 22 :out 0))
       (:to (:box 21 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 23 :out 0))
       (:to (:box 21 :in 2))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 0 :in 0))))))
   (:group-id nil)
   (:name "diamante")
   (:x 2785/6)
   (:y 274)
   (:w 90)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "Lista de Razoes")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "nota de referencia da Afinação Justa")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "nota grave")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "nota mais aguda")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 25))
  (:box
   (:type :function)
   (:reference maketreegroups)
   (:group-id nil)
   (:name "maketreegroups")
   (:x 1117)
   (:y 222)
   (:w 128)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "FIGURES")
     (:value
      (:list (:list 1 1 1) (:list 1 2 1) (:list 3 4) (:list 1 1 1 1)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value (:list 0 3 0 2 0 1 0 0 3))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MEASURES")
     (:value (:list (:list 4 4)))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 15")
   (:x 570)
   (:y 226)
   (:w 46)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7200)
   (:id 27))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 9")
   (:x 525)
   (:y 225)
   (:w 46)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 28))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name "VOICE 2")
   (:x 947)
   (:y 300)
   (:w 348)
   (:h 124)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value
      (:list
       (:object
        (:class chord)
        (:slots
         ((:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:onset 0)
          (:item-time nil)
          (:item-internal-time nil)
          (:item-type nil)
          (:attributes nil)
          (:lmidic (:list 6000))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:ldur (:list 1000))
          (:lchan (:list 1))
          (:lport (:list nil)))))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 80)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil)))
   (:window (:size (650 300)) (:position (130 130)))
   (:edition-params
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7)
      (:list 500 12.166667)
      (:list 750 16.0)
      (:list 938 19.125)
      (:list 1312 23.875)
      (:list 1500 27.0)
      (:list 1607 30.857144)
      (:list 1821 34.07143)
      (:list 1929 37.928574)
      (:list 2143 41.64286)
      (:list 2250 45.000004)
      (:list 2812 49.875004)
      (:list 3000 59.500004)
      (:list 3375 63.750004)
      (:list 3500 67.16667)
      (:list 3625 70.583336)
      (:list 3750 73.5)
      (:list 3857 77.35714)
      (:list 4071 80.57143)
      (:list 4179 84.428566)
      (:list 4393 88.14285)
      (:list 4500 90.99999)))
    (:staff :line))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 4499)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE 2")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         2
         (:list
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list -2 1))
            (:list 1 (:list 1 -2 1))
            (:list 1 (:list -1 2 -1 2 1))
            (:list 1 (:list 3 1))))
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list 2 (:list 2 (:list 1 1 1))))
            (:list 1 (:list -1 2 -1 2 1))
            -2)))))
       (:lmidic (:list 6000))
       (:lonset
        (:list
         500
         750
         1312
         1607
         1929
         2143
         2250
         2812
         3000
         3375
         3500
         3625
         3857
         4179
         4393
         6000))
       (:ldur
        (:list
         (:list 249)
         (:list 187)
         (:list 187)
         (:list 213)
         (:list 213)
         (:list 106)
         (:list 561)
         (:list 187)
         (:list 374)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 213)
         (:list 213)
         (:list 106)))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 1))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 80)))))
   (:id 29))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 0)
   (:y 300)
   (:w 155)
   (:h 80)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 1100)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points
        (:list 0 100 200 300 400 500 600 700 800 900 1000 1100))
       (:y-points (:list 11 8 3 11 5 6 5 4 8 3 6 8))))
     (:add-slots ((:name "BPF")))))
   (:id 30))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 14")
   (:x 655)
   (:y 362)
   (:w 39)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 100)
   (:id 31))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 13")
   (:x 609)
   (:y 353)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 90)
   (:id 32))
  (:box
   (:type :function)
   (:reference om-scale)
   (:group-id nil)
   (:name "om-scale")
   (:x 611)
   (:y 406)
   (:w 88)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MINOUT")
     (:value 0)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "MAXOUT")
     (:value 0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 33))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 10")
   (:x 701)
   (:y 478)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 80)
   (:id 34))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name "VOICE")
   (:x 302)
   (:y 523)
   (:w 984)
   (:h 139)
   (:color
    (:color-or-nil (:color (:color 0.0 0.0 1.0 1.0)) (:t-or-nil t)))
   (:border (:number-or-nil (:number 1.0) (:t-or-nil nil)))
   (:roundness (:number-or-nil (:number 3) (:t-or-nil nil)))
   (:text-font (:font-or-nil (:font nil) (:t-or-nil nil)))
   (:align :center)
   (:display :mini-view)
   (:showname t)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value
      (:list
       (:object
        (:class chord)
        (:slots
         ((:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:onset 0)
          (:item-time nil)
          (:item-internal-time nil)
          (:item-type nil)
          (:attributes nil)
          (:lmidic (:list 6000))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:ldur (:list 1000))
          (:lchan (:list 1))
          (:lport (:list nil)))))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 60)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil))
    (:input (:type :key) (:name "lport") (:value nil) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "lport") (:reactive nil)))
   (:window (:size (1366 725)) (:position (-8 -8)))
   (:edition-params
    (:channel-display :color-and-number)
    (:velocity-display :symbol)
    (:offsets :hidden)
    (:grid nil)
    (:duration-display nil)
    (:scale :scale-1/8)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 7)
      (:list 500 12.166667)
      (:list 750 16.8)
      (:list 938 19.925)
      (:list 1312 25.474999)
      (:list 1500 28.599999)
      (:list 1607 32.45714)
      (:list 1821 35.67143)
      (:list 1929 40.32857)
      (:list 2143 44.04286)
      (:list 2250 47.4)
      (:list 2812 53.075)
      (:list 3000 63.5)
      (:list 3375 68.55)
      (:list 3500 71.96667)
      (:list 3625 76.183335)
      (:list 3750 79.1)
      (:list 3857 83.75714)
      (:list 4071 86.97143)
      (:list 4179 90.82857)
      (:list 4393 94.542855)
      (:list 4500 97.399994)))
    (:staff :g))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 4499)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         2
         (:list
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list -2 1))
            (:list 1 (:list 1 -2 1))
            (:list 1 (:list -1 2 -1 2 1))
            (:list 1 (:list 3 1))))
          (:list
           (:list 4 4)
           (:list
            (:list 1 (:list 2 (:list 2 (:list 1 1 1))))
            (:list 1 (:list -1 2 -1 2 1))
            -2)))))
       (:lmidic
        (:list
         (:list 6906)
         (:list 6612)
         (:list 6114)
         (:list 6906)
         (:list 6318)
         (:list 6408)
         (:list 6408)
         (:list 6318)
         (:list 7020)
         (:list 6114)
         (:list 6702)
         (:list 7020)
         (:list 6318)
         (:list 6204)
         (:list 6702)))
       (:lonset
        (:list
         500
         750
         1312
         1607
         1929
         2143
         2250
         2812
         3000
         3375
         3500
         3625
         3857
         4179
         4393
         6000))
       (:ldur
        (:list
         (:list 249)
         (:list 187)
         (:list 187)
         (:list 213)
         (:list 213)
         (:list 106)
         (:list 561)
         (:list 187)
         (:list 374)
         (:list 124)
         (:list 124)
         (:list 124)
         (:list 213)
         (:list 213)
         (:list 106)))
       (:lvel
        (:list
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 96)
         (:list 96)
         (:list 96)
         (:list 90)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 100)
         (:list 92)
         (:list 92)
         (:list 100)))
       (:loffset (:list 0))
       (:lchan
        (:list
         (:list 5)
         (:list 1)
         (:list 1)
         (:list 5)
         (:list 1)
         (:list 3)
         (:list 5)
         (:list 1)
         (:list 5)
         (:list 3)
         (:list 1)
         (:list 3)
         (:list 5)
         (:list 1)
         (:list 5)))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 80)))))
   (:id 35))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 629)
   (:y 15)
   (:w 72)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value (:list 0 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 36))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 3")
   (:x 479)
   (:y 225)
   (:w 46)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6500)
   (:id 37))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 377)
   (:y 215)
   (:w 76)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 363)
   (:y 66)
   (:w 132)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 39))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "sieve")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (842 500)) (:position (52 48)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 31)
       (:y 350)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:comment
       (:x 155)
       (:y 53)
       (:w 100)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Objeto crible")
       (:id 1))
      (:comment
       (:x 379)
       (:y 52)
       (:w 100)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Objeto crible")
       (:id 2))
      (:comment
       (:x 218)
       (:y 240)
       (:w 100)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Tradução para números")
       (:id 3))
      (:comment
       (:x 427)
       (:y 241)
       (:w 100)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "Tradução para números")
       (:id 4))
      (:comment
       (:x 227)
       (:y 161)
       (:w 63)
       (:h 65)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "união das sieves")
       (:id 5))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference c-union)
       (:group-id nil)
       (:name "c-union")
       (:x 177)
       (:y 147)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CRIBLE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference revel-crible)
       (:group-id nil)
       (:name "revel-crible")
       (:x 453)
       (:y 75)
       (:w 100)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference revel-crible)
       (:group-id nil)
       (:name "revel-crible")
       (:x 54)
       (:y 103)
       (:w 100)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "TEXT-BOX 4")
       (:x 434)
       (:y 163)
       (:w 101)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value "untitled")
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 16 35 54))
       (:id 9))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "TEXT-BOX 3")
       (:x 16)
       (:y 183)
       (:w 136)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value "untitled")
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 16 27 38 49 60))
       (:id 10))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "TEXT-BOX 2")
       (:x 312)
       (:y 316)
       (:w 76)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value "untitled")
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 16))
       (:id 11))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference revel-crible)
       (:group-id nil)
       (:name "revel-crible")
       (:x 323)
       (:y 236)
       (:w 100)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference c-intersection)
       (:group-id nil)
       (:name "c-intersection")
       (:x 321)
       (:y 149)
       (:w 113)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CRIBLE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "TEXT-BOX")
       (:x 120)
       (:y 328)
       (:w 164)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs
        (:input
         (:type :optional)
         (:name "in")
         (:value "untitled")
         (:reactive nil)))
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 16 27 35 38 49 54 60))
       (:id 14))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference revel-crible)
       (:group-id nil)
       (:name "revel-crible")
       (:x 113)
       (:y 238)
       (:w 100)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 2")
       (:x 301)
       (:y 15)
       (:w 85)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 19 16 64))
       (:id 16))
      (:box
       (:library "Mathtools")
       (:type :object)
       (:reference crible)
       (:group-id nil)
       (:name "CRIBLE 2")
       (:x 246)
       (:y 47)
       (:w 115)
       (:h 40)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CR-EXP")
         (:value (:list 2 0 18))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CR-EXP") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class crible)
         (:slots ((:cr-exp (:list 19 16 64))))))
       (:id 17))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 133)
       (:y 6)
       (:w 85)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 11 16 64))
       (:id 18))
      (:box
       (:library "Mathtools")
       (:type :object)
       (:reference crible)
       (:group-id nil)
       (:name "CRIBLE")
       (:x 46)
       (:y 44)
       (:w 111)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CR-EXP")
         (:value (:list 2 0 18))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CR-EXP") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class crible)
         (:slots ((:cr-exp (:list 11 16 64))))))
       (:id 19)))
     (:connections
      (:connection
       (:from (:box 6 :out 0))
       (:to (:box 15 :in 0))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 0)))
      (:connection
       (:from (:box 8 :out 0))
       (:to (:box 10 :in 0))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 0 :in 0)))
      (:connection
       (:from (:box 15 :out 0))
       (:to (:box 14 :in 0))
       (:attributes
        (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 1)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 6 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 7 :in 0))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 17 :out 0))
       (:to (:box 13 :in 1))
       (:attributes
        (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 1)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 6 :in 0))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 8 :in 0))
       (:attributes
        (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
      (:connection
       (:from (:box 19 :out 0))
       (:to (:box 13 :in 0))
       (:attributes
        (:color
         (:color 1.0S0 0.0S0 0.0S0 1.0)
         :style
         nil
         :modif
         nil))))))
   (:group-id nil)
   (:name "sieve")
   (:x 89)
   (:y 0)
   (:w 66)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 40))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference play-om\#)
   (:group-id nil)
   (:name "play-om#")
   (:x 321)
   (:y 666)
   (:w 92)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CKN")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 41))
  (:comment
   (:x 702)
   (:y 410)
   (:w 64)
   (:h 26)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Dinâmica")
   (:id 42))
  (:comment
   (:x 501)
   (:y 101)
   (:w 146)
   (:h 52)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Parametro da altura")
   (:id 43))
  (:comment
   (:x 711)
   (:y 18)
   (:w 162)
   (:h 25)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "<- Perfil da sieve")
   (:id 44))
  (:comment
   (:x 708)
   (:y 339)
   (:w 148)
   (:h 26)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Parâmetro da dinâmica")
   (:id 45))
  (:comment
   (:x 705)
   (:y 368)
   (:w 230)
   (:h 26)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "O perfil será +/- forte ou piano....")
   (:id 46))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "canal-midi")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (500 500)) (:position (416 113)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 96)
       (:y 23)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 264)
       (:y 21)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "in") (:doc "")))
       (:group-id nil)
       (:name "in")
       (:x 327)
       (:y 36)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 293)
       (:y 393)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 162)
       (:y 136)
       (:w 88)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 154)
       (:y 182)
       (:w 93)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 258)
       (:y 265)
       (:w 89)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 299)
       (:y 230)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 7))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 283)
       (:y 353)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 148)
       (:y 272)
       (:w 73)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference nth-random)
       (:group-id nil)
       (:name "nth-random")
       (:x 10)
       (:y 281)
       (:w 104)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 82)
       (:y 354)
       (:w 89)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 11))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "value box")
       (:x 46)
       (:y 246)
       (:w 79)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1 2 3 5))
       (:id 12))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 299)
       (:y 298)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 2)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0))))))
   (:group-id nil)
   (:name "canal-midi")
   (:x 23)
   (:y 516)
   (:w 96)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "in")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 47))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 0)
   (:y 409)
   (:w 79)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 48))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 51)
   (:y 483)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 4)
   (:id 49))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 86)
   (:y 483)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 5)
   (:id 50))
  (:box
   (:type :function)
   (:reference sort-list)
   (:group-id nil)
   (:name "sort-list")
   (:x 268)
   (:y 242)
   (:w 80)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 51))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "mos")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (351 368)) (:position (156 156)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos)
       (:group-id nil)
       (:name "mos")
       (:x 122)
       (:y 172)
       (:w 62)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 11)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 81)
       (:y 96)
       (:w 46)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 1))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 137)
       (:y 137)
       (:w 46)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7200)
       (:id 2))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "value box")
       (:x 50)
       (:y 137)
       (:w 37)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3/2)
       (:id 3))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 148)
       (:y 85)
       (:w 103)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 160)
       (:y 50)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 12)
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 207)
       (:y 50)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 16)
       (:id 6))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 122)
       (:y 226)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 7)))
     (:connections
      (:connection
       (:from (:box 0 :out 0))
       (:to (:box 7 :in 0))
       (:attributes
        (:color (:color 0.2 0.4 0.5 1.0) :style :curved :modif nil)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 0 :in 2)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 3)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 1))))))
   (:group-id nil)
   (:name "mos")
   (:x 258)
   (:y 165)
   (:w 90)
   (:h 60)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output 1") (:reactive nil)))
   (:id 52))
  (:comment
   (:x 331)
   (:y 331)
   (:w 210)
   (:h 26)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "<- Definição do perfil melódico")
   (:id 53))
  (:comment
   (:x 887)
   (:y 234)
   (:w 175)
   (:h 46)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Definição da compressão/expansão do perfil.")
   (:id 54))
  (:comment
   (:x 124)
   (:y 537)
   (:w 161)
   (:h 28)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text "Definição do canal MIDI. ")
   (:id 55)))
 (:connections
  (:connection
   (:from (:box 0 :out 0))
   (:to (:box 26 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.5019608 0.5019608 1.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 1 :out 0)) (:to (:box 3 :in 0)))
  (:connection (:from (:box 2 :out 1)) (:to (:box 26 :in 0)))
  (:connection
   (:from (:box 3 :out 0))
   (:to (:box 18 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 1.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 4 :out 0))
   (:to (:box 30 :in 2))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 4 :out 1))
   (:to (:box 6 :in 2))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 14 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     (0 0.22922077))))
  (:connection
   (:from (:box 5 :out 0))
   (:to (:box 24 :in 1))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 6 :out 2))
   (:to (:box 5 :in 1))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 7 :out 0)) (:to (:box 9 :in 1)))
  (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 0)))
  (:connection (:from (:box 9 :out 0)) (:to (:box 16 :in 1)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 1)))
  (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 20 :in 2)))
  (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 1)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 33 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.5019608 0.7529412 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 2)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 3 :in 2)))
  (:connection (:from (:box 17 :out 0)) (:to (:box 16 :in 0)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 0 :in 0))
   (:attributes (:color nil :style nil :modif (728/2451 0))))
  (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 1)))
  (:connection
   (:from (:box 20 :out 0))
   (:to (:box 3 :in 1))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 1.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 26 :in 2)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 38 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 22 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 35 :in 2))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 26 :out 0))
   (:to (:box 29 :in 1))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 1.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 27 :out 0))
   (:to (:box 25 :in 3))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 28 :out 0))
   (:to (:box 25 :in 2))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 29 :out 1))
   (:to (:box 35 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     (0 -9/436))))
  (:connection
   (:from (:box 30 :out 2))
   (:to (:box 5 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 30 :out 2))
   (:to (:box 48 :in 0))
   (:attributes (:color nil :style nil :modif (0 0))))
  (:connection (:from (:box 31 :out 0)) (:to (:box 33 :in 2)))
  (:connection (:from (:box 32 :out 0)) (:to (:box 33 :in 1)))
  (:connection
   (:from (:box 33 :out 0))
   (:to (:box 35 :in 4))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.5019608 0.7529412 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 34 :out 0)) (:to (:box 35 :in 3)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 41 :in 0)))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 17 :in 0))
   (:attributes (:color nil :style nil :modif (0 -15/43))))
  (:connection
   (:from (:box 36 :out 0))
   (:to (:box 20 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 1.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 37 :out 0))
   (:to (:box 25 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 38 :out 0))
   (:to (:box 25 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     (0 0))))
  (:connection
   (:from (:box 39 :out 0))
   (:to (:box 38 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 39 :out 1))
   (:to (:box 23 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 40 :out 0))
   (:to (:box 4 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 40 :out 0))
   (:to (:box 36 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 1.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 40 :out 0))
   (:to (:box 39 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.0 0.5019608 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 47 :out 0))
   (:to (:box 35 :in 6))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.85882354 0.7490196 0.14117648 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     (-194942/663369 0))))
  (:connection (:from (:box 48 :out 0)) (:to (:box 47 :in 0)))
  (:connection (:from (:box 49 :out 0)) (:to (:box 47 :in 1)))
  (:connection (:from (:box 50 :out 0)) (:to (:box 47 :in 2)))
  (:connection (:from (:box 51 :out 0)) (:to (:box 24 :in 0)))
  (:connection
   (:from (:box 52 :out 0))
   (:to (:box 51 :in 0))
   (:attributes
    (:color (:color 0.2 0.4 0.5 1.0) :style nil :modif nil)))))