; OM File Header - Saved 2019/10/14 22:58:55
; (6.15 :patc (om-make-point 226 60) (om-make-point 354 25) (om-make-point 699 719) "" 183 0 "2019/10/14 22:23:52" "2019/10/14 22:58:55")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-Partch")))(setf *om-current-persistent* (om-load-patch1 "octave-reduce" (quote ((let ((box (om-load-editor-box1 "TEXT-BOX 4" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 16 438) (om-make-point 331 40) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 303 16) "((7200 7698 6814 6232) (6702 7200 6316 8134) (7586 8084 7200 6618) (8168 6266 7782 7200))" :font (om-make-font "Verdana" 11.25 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-BOX 3" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 370 438) (om-make-point 250 40) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 222 16) "(8304 6456 6264 6072 6624)" :font (om-make-font "Verdana" 11.25 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 2" (om-make-point 296 76) (quote "Reduzir lista de midicents para determinado intervalo. No caso deste exemplo o intervalo é entre 6000 e 8400. $$No inlet 4, usar 2 para redução em lista.") nil (om-make-point 345 513) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-BOX 2" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 9 240) (om-make-point 359 40) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 331 16) "((6000 4098 3214 2632) (7902 6000 5116 4534) (8786 6884 6000 5418) (9368 7466 6582 6000))" :font (om-make-font "Verdana" 11.25 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "TEXT-BOX" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 358 192) (om-make-point 218 40) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 190 16) "(7104 7656 9864 12072 12624)" :font (om-make-font "Verdana" 11.25 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) nil nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 11" (quote t) (quote nil) (om-make-point 461 294) (om-make-point 44 28) 8400 "8400" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 10" (quote t) (quote nil) (om-make-point 507 294) (om-make-point 26 28) 2 "2" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OCTAVE-REDUCE 2" (quote octave-reduce) (quote ((om-load-inputfun (quote input-funbox) "list of midicents" "NOTE" (list 4800 7200 6000)) (om-load-inputfun (quote input-funbox) "nota mais grave" "GRAVE" 6000) (om-load-inputfun (quote input-funbox) "nota mais aguda" "AGUDA" 7200) (om-load-inputfunmenu1 (quote input-funmenu) "list or list-of-lists" "MODE" 1 (list (list "list-of-lists" 1) (list "list" 2))))) (om-make-point 368 337) (om-make-point 171 74) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 9" (quote t) (quote nil) (om-make-point 416 294) (om-make-point 44 28) 6000 "6000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 8" (quote t) (quote nil) (om-make-point 339 67) (om-make-point 44 28) 6000 "6000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 7" (quote t) (quote nil) (om-make-point 407 68) (om-make-point 43 28) 11/8 "11/8" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 6" (quote t) (quote nil) (om-make-point 481 78) (om-make-point 87 28) (list 2 3 7 11 12) "(2 3 7 11 12)" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "INTERVAL-SOBREPOSITION" (quote interval-sobreposition) (quote ((om-load-inputfun (quote input-funbox) "fundamental note of sobreposition" "FUND" 6000) (om-load-inputfun (quote input-funbox) "Just Intonation interval" "RATIO" 11/8) (om-load-inputfun (quote input-funbox) "list of sopreposition (I recomend the use o 'crible' object" "SIEVE" (list 2 3 7 11 12)))) (om-make-point 317 108) (om-make-point 226 74) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 5" (quote t) (quote nil) (om-make-point 128 311) (om-make-point 44 28) 8400 "8400" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux" (quote t) (quote nil) (om-make-point 135 122) (om-make-point 44 28) 6000 "6000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "RATIO->MC" (quote ratio->mc) (quote ((om-load-inputfun (quote input-funbox) "convert list of ratios for midicent in Just Intonation" "RATIO" (list 1 11/8 7/4)) (om-load-inputfun (quote input-funbox) "this is the fundamental of the Just Intonation" "FUNDAMENTAL" 6000))) (om-make-point 101 152) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 4" (quote t) (quote nil) (om-make-point 34 47) (om-make-point 26 28) 7 "7" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "TONALITY-DIAMOND" (quote tonality-diamond) (quote ((om-load-inputfun (quote input-funbox) "limit-n for the diamond" "LIMITE" 5) (om-load-inputfunmenu1 (quote input-funmenu) "U-tonality or O-tonality" "TONALITY" 1 (list (list "u-tonality" 1) (list "o-tonality" 2))))) (om-make-point 14 75) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 3" (quote t) (quote nil) (om-make-point 174 311) (om-make-point 26 28) 1 "1" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 296 76) (quote "Reduzir lista de midicents para determinado intervalo. No caso deste exemplo o intervalo é entre 6000 e 8400. $$No inlet 4, usar 1 para redução em lista de listas.") nil (om-make-point 14 523) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote bastype) "aux 2" (quote t) (quote nil) (om-make-point 83 311) (om-make-point 44 28) 6000 "6000" nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "OCTAVE-REDUCE" (quote octave-reduce) (quote ((om-load-inputfun (quote input-funbox) "list of midicents" "NOTE" (list 4800 7200 6000)) (om-load-inputfun (quote input-funbox) "nota mais grave" "GRAVE" 6000) (om-load-inputfun (quote input-funbox) "nota mais aguda" "AGUDA" 7200) (om-load-inputfunmenu1 (quote input-funmenu) "list or list-of-lists" "MODE" 1 (list (list "list-of-lists" 1) (list "list" 2))))) (om-make-point 35 338) (om-make-point 171 74) nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((21 0 0 0 nil 0) (7 0 1 0 nil 0) (15 0 3 0 nil 0) (12 0 4 0 nil 0) (4 0 7 0 nil 0) (8 0 7 1 nil 0) (5 0 7 2 nil 0) (6 0 7 3 nil 0) (9 0 12 0 nil 0) (10 0 12 1 nil 0) (11 0 12 2 nil 0) (17 0 15 0 nil 0) (14 0 15 1 nil 0) (16 0 17 0 nil 0) (3 0 21 0 nil 0) (20 0 21 1 nil 0) (13 0 21 2 nil 0) (18 0 21 3 nil 0))) nil 6.15))