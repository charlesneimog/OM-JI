
(:patch
 (:name "3.1.2.1 - a tranção de perfis melódicos")
 (:doc "")
 (:info
  (:created "2020/08/28 16:50:23")
  (:modified "2020/08/29 21:34:26")
  (:by "om-sharp")
  (:version 1.0))
 (:window (:size (1382 784)) (:position (-8 -8)))
 (:grid nil)
 (:lock nil)
 (:boxes
  (:comment
   (:x 654)
   (:y 263)
   (:w 103)
   (:h 25)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text "Contorno B")
   (:id 0))
  (:comment
   (:x 428)
   (:y 268)
   (:w 108)
   (:h 26)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text
    "Contorno A
")
   (:id 1))
  (:comment
   (:x 1132)
   (:y 588)
   (:w 168)
   (:h 75)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :bold)))
   (:align nil)
   (:text "As alturas estão filtradas para quartos de tom.")
   (:id 2))
  (:comment
   (:x 736)
   (:y 495)
   (:w 135)
   (:h 36)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text "Ritmos arbitrários.")
   (:id 3))
  (:comment
   (:x 698)
   (:y 19)
   (:w 166)
   (:h 50)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text "Perfil inverso da sieve.")
   (:id 4))
  (:comment
   (:x 361)
   (:y 20)
   (:w 119)
   (:h 60)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font (:font (:face "Verdana") (:size 14) (:style :plain)))
   (:align nil)
   (:text "Perfil da sieve.")
   (:id 5))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 2")
   (:x 805)
   (:y 529)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 80)
   (:id 6))
  (:comment
   (:x 916)
   (:y 244)
   (:w 133)
   (:h 54)
   (:fgcolor (:color 0 0 0 1.0))
   (:bgcolor nil)
   (:border 0)
   (:roundness nil)
   (:text-font
    (:font-or-nil
     (:font (:font (:face "Verdana") (:size 12) (:style :plain)))
     (:t-or-nil t)))
   (:align nil)
   (:text
    "Contrução do contorno melódico
")
   (:id 7))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Contorno PARTCH")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 177)
       (:y 205)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 50)
       (:y 50)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 13")
       (:x 140)
       (:y 75)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 176)
       (:y 97)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 5)
       (:id 3))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 240)
       (:y 123)
       (:w 93)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 141)
       (:y 127)
       (:w 88)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 5 :in 2)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 4 :in 0))))))
   (:group-id nil)
   (:name "Contorno PARTCH")
   (:x 1473/4)
   (:y 157/2)
   (:w 136)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 8))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "contorno WILSON")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 84)
       (:y 336)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 50)
       (:y 50)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 326)
       (:y 132)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 68)
       (:y 249)
       (:w 93)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 91)
       (:y 85)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 3)
       (:id 4))
      (:box
       (:type :function)
       (:reference om-scale)
       (:group-id nil)
       (:name "om-scale")
       (:x 68)
       (:y 132)
       (:w 88)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MINOUT")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "MAXOUT")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference length)
       (:group-id nil)
       (:name "length")
       (:x 171)
       (:y 68)
       (:w 73)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 5 :in 2))))))
   (:group-id nil)
   (:name "contorno WILSON")
   (:x 2997/4)
   (:y 325/4)
   (:w 137)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 9))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "Ritmo")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (840 500)) (:position (52 48)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 145)
       (:y 405)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 11")
       (:x 287)
       (:y 354)
       (:w 45)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 2 4))
       (:id 1))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 9")
       (:x 37)
       (:y 116)
       (:w 256)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/16 1/16 1/16 1/16 1/16 1/4 1/16 1/16 1/2))
       (:id 2))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 65)
       (:y 158)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 8")
       (:x 221)
       (:y 205)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8)
       (:id 4))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 191)
       (:y 235)
       (:w 89)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 5))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 560)
       (:y 299)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 7")
       (:x 1036)
       (:y 235)
       (:w 185)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/4 1/20 1/20 1/20 1/20 1/20))
       (:id 7))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 6")
       (:x 1015)
       (:y 187)
       (:w 185)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/4 1/20 1/20 1/20 1/20 1/20))
       (:id 8))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 5")
       (:x 1085)
       (:y 78)
       (:w 185)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/4 1/20 1/20 1/20 1/20 1/20))
       (:id 9))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 4")
       (:x 899)
       (:y 78)
       (:w 181)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/20 1/4 1/20 1/20 1/20 1/20))
       (:id 10))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 3")
       (:x 716)
       (:y 78)
       (:w 181)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/20 1/20 1/4 1/20 1/20 1/20))
       (:id 11))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 2")
       (:x 531)
       (:y 77)
       (:w 181)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/20 1/20 1/20 1/4 1/20 1/20))
       (:id 12))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 341)
       (:y 40)
       (:w 181)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/20 1/20 1/20 1/20 1/20 1/4))
       (:id 13))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 321)
       (:y 168)
       (:w 225)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value 2)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value 3)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value 4)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value 5)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 10")
       (:x 42)
       (:y 52)
       (:w 238)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 1/16 1/16 1/16 1/16 1/8 1/8 1/8 1/8 1/2))
       (:id 15))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 224)
       (:y 315)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 16))
      (:box
       (:type :function)
       (:reference mktree)
       (:group-id nil)
       (:name "mktree")
       (:x 261)
       (:y 384)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RHYTHM")
         (:value (:list 1/4 1/4 1/4 1/4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TIMESIGNS")
         (:value (:list 3 4))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 17 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 2)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 14 :in 5)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 14 :in 4)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 3)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 5 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 0 :in 0))))))
   (:group-id nil)
   (:name "Ritmo")
   (:x 700)
   (:y 2879/6)
   (:w 71)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 10))
  (:box
   (:type :function)
   (:reference reverse)
   (:group-id nil)
   (:name "reverse")
   (:x 617)
   (:y 17)
   (:w 79)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SEQUENCE")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 11))
  (:box
   (:type :object)
   (:reference voice)
   (:group-id nil)
   (:name "VOICE")
   (:x 480)
   (:y 582)
   (:w 635)
   (:h 108)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TREE")
     (:value (:list ? (:list (:list (:list 4 4) (:list 1 1 1 1)))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value
      (:list
       (:object
        (:class chord)
        (:slots
         ((:symbolic-date nil)
          (:symbolic-dur nil)
          (:symbolic-dur-extent 0)
          (:extras nil)
          (:onset 0)
          (:item-time nil)
          (:item-internal-time nil)
          (:item-type nil)
          (:attributes nil)
          (:lmidic (:list 6000))
          (:lvel (:list 100))
          (:loffset (:list 0))
          (:ldur (:list 1000))
          (:lchan (:list 1))
          (:lport (:list nil)))))))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "TEMPO")
     (:value 100)
     (:reactive nil))
    (:input (:type :key) (:name "lvel") (:value 100) (:reactive nil))
    (:input (:type :key) (:name "loffset") (:value 0) (:reactive nil))
    (:input (:type :key) (:name "lchan") (:value 1) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "TREE") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "TEMPO") (:reactive nil))
    (:output (:name "lvel") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil)))
   (:window (:size (1366 725)) (:position (-8 -8)))
   (:edition-params
    (:duration-display nil)
    (:offsets :hidden)
    (:port-display nil)
    (:channel-display :hidden)
    (:velocity-display :symbol)
    (:font-size 75)
    (:scale :scale-1/8)
    (:time-map
     (:list
      (:list -1000 0)
      (:list 0 8.3)
      (:list 150 11.8)
      (:list 300 15.3)
      (:list 450 19.599999)
      (:list 600 23.899998)
      (:list 750 27.399998)
      (:list 1500 38.899998)
      (:list 1650 42.399998)
      (:list 1800 46.699997)
      (:list 1950 50.199997)
      (:list 2100 54.499997)
      (:list 2250 57.999997)
      (:list 3000 69.5)
      (:list 3150 73.8)
      (:list 3300 78.100006)
      (:list 3450 81.600006)
      (:list 3600 85.90001)
      (:list 3750 89.40001)
      (:list 4500 101.70001)
      (:list 4650 106.000016)
      (:list 4800 110.30002)
      (:list 4950 114.60002)
      (:list 5100 118.900025)
      (:list 5250 122.400025)
      (:list 6000 134.70003)
      (:list 6150 138.20003)
      (:list 6300 142.50003)
      (:list 6450 146.80004)
      (:list 6600 151.10004)
      (:list 6750 155.40004)
      (:list 7500 166.90004)
      (:list 7650 170.40004)
      (:list 7800 174.70005)
      (:list 7950 178.20005)
      (:list 8100 182.50005)
      (:list 8250 186.80005)
      (:list 9000 199.10005)
      (:list 9150 203.40006)
      (:list 9300 206.90006)
      (:list 9450 211.20006)
      (:list 9600 214.70006)
      (:list 9750 218.20006)
      (:list 10500 230.50006)
      (:list 10650 234.80007)
      (:list 10800 238.30007)
      (:list 10950 242.60007)
      (:list 11100 246.10007)
      (:list 11250 249.60007)))
    (:staff :g))
   (:value
    (:object
     (:class voice)
     (:slots
      ((:onset 0)
       (:duration 11999)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "VOICE")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:tree
        (:list
         8
         (:list
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1))
          (:list (:list 2 4) (:list (:list 1 (:list 1 1 1 1 1)) 1)))))
       (:lmidic
        (:list
         (:list 7545)
         (:list 7251)
         (:list 6500)
         (:list 7545)
         (:list 6642)
         (:list 7251)
         (:list 7251)
         (:list 7200)
         (:list 6600)
         (:list 7251)
         (:list 6642)
         (:list 7200)
         (:list 7200)
         (:list 6642)
         (:list 6600)
         (:list 7200)
         (:list 6642)
         (:list 7200)
         (:list 6642)
         (:list 6642)
         (:list 6642)
         (:list 6642)
         (:list 6642)
         (:list 7200)
         (:list 6600)
         (:list 6500)
         (:list 6642)
         (:list 6600)
         (:list 6642)
         (:list 6642)
         (:list 6500)
         (:list 6500)
         (:list 6642)
         (:list 6500)
         (:list 6642)
         (:list 6642)
         (:list 6304)
         (:list 6304)
         (:list 6752)
         (:list 6304)
         (:list 6752)
         (:list 6752)
         (:list 6304)
         (:list 6304)
         (:list 6752)
         (:list 6304)
         (:list 6752)
         (:list 6752)))
       (:lonset
        (:list
         0
         150
         300
         450
         600
         750
         1500
         1650
         1800
         1950
         2100
         2250
         3000
         3150
         3300
         3450
         3600
         3750
         4500
         4650
         4800
         4950
         5100
         5250
         6000
         6150
         6300
         6450
         6600
         6750
         7500
         7650
         7800
         7950
         8100
         8250
         9000
         9150
         9300
         9450
         9600
         9750
         10500
         10650
         10800
         10950
         11100
         11250
         12000))
       (:ldur
        (:list
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 749)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 749)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 749)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 749)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 749)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 749)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 749)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 149)
         (:list 749)))
       (:lvel
        (:list
         (:list 60)
         (:list 64)
         (:list 69)
         (:list 73)
         (:list 77)
         (:list 81)
         (:list 86)
         (:list 90)
         (:list 67)
         (:list 69)
         (:list 71)
         (:list 74)
         (:list 76)
         (:list 79)
         (:list 81)
         (:list 83)
         (:list 71)
         (:list 72)
         (:list 73)
         (:list 74)
         (:list 76)
         (:list 77)
         (:list 78)
         (:list 79)
         (:list 75)
         (:list 75)
         (:list 75)
         (:list 75)
         (:list 75)
         (:list 75)
         (:list 75)
         (:list 75)
         (:list 78)
         (:list 77)
         (:list 76)
         (:list 75)
         (:list 75)
         (:list 74)
         (:list 73)
         (:list 72)
         (:list 81)
         (:list 80)
         (:list 78)
         (:list 76)
         (:list 74)
         (:list 72)
         (:list 70)
         (:list 69)))
       (:loffset (:list 0))
       (:lchan (:list 9))
       (:lport (:list nil))
       (:llegato nil)
       (:tempo 80)))))
   (:id 12))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "MOS")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 813)
       (:y 398)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 741)
       (:y 59)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 865)
       (:y 35)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 931)
       (:y 45)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
       (:group-id nil)
       (:name "input 4")
       (:x 1050)
       (:y 95)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 10")
       (:x 594)
       (:y 275)
       (:w 35)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 9))
       (:id 5))
      (:box
       (:type :function)
       (:reference om-round)
       (:group-id nil)
       (:name "om-round")
       (:x 502)
       (:y 218)
       (:w 93)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "N")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :function)
       (:reference x->dx)
       (:group-id nil)
       (:name "x->dx")
       (:x 637)
       (:y 172)
       (:w 72)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value (:list 0 1))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 9")
       (:x 429)
       (:y 175)
       (:w 44)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6000)
       (:id 8))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 405)
       (:y 205)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 11/8)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name "CHORD-SEQ")
       (:x 395)
       (:y 305)
       (:w 258)
       (:h 142)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 1000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value (:list 1))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "llegato")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil))
        (:output (:name "llegato") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:staff :ggff))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 12000)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "CHORD-SEQ")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:lmidic
            (:list
             (:list 6000)
             (:list 6044)
             (:list 6088)
             (:list 6275)
             (:list 6319)
             (:list 6506)
             (:list 6551)
             (:list 6738)
             (:list 6782)
             (:list 6969)
             (:list 7013)
             (:list 7200)))
           (:lonset
            (:list
             0
             1000
             2000
             3000
             4000
             5000
             6000
             7000
             8000
             9000
             10000
             11000
             12000))
           (:ldur (:list 1000))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 9))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 10))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 8")
       (:x 55)
       (:y 70)
       (:w 37)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 11))
      (:box
       (:type :function)
       (:reference om*)
       (:group-id nil)
       (:name "om*")
       (:x 94)
       (:y 129)
       (:w 63)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 247)
       (:y 310)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt-octave)
       (:group-id nil)
       (:name "rt-octave")
       (:x 303)
       (:y 128)
       (:w 88)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "FRAQ")
         (:value 3/2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 7")
       (:x 248)
       (:y 221)
       (:w 37)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 2)
       (:id 15))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 6")
       (:x 172)
       (:y 209)
       (:w 37)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 16))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 207)
       (:y 250)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :value)
       (:reference ratio)
       (:group-id nil)
       (:name "aux 5")
       (:x 170)
       (:y 25)
       (:w 37)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7/4)
       (:id 18))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 4")
       (:x 473)
       (:y 35)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 503)
       (:y 37)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 20))
      (:box
       (:type :function)
       (:reference arithm-ser)
       (:group-id nil)
       (:name "arithm-ser")
       (:x 477)
       (:y 67)
       (:w 96)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "STEP")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 21))
      (:box
       (:type :function)
       (:reference om^)
       (:group-id nil)
       (:name "om^")
       (:x 160)
       (:y 61)
       (:w 89)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "A")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "B")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 22))
      (:comment
       (:x 465)
       (:y 146)
       (:w 100)
       (:h 60)
       (:fgcolor (:color 0 0 0 1.0))
       (:bgcolor nil)
       (:border 0)
       (:roundness nil)
       (:text-font
        (:font (:face "Verdana") (:size 12) (:style :plain)))
       (:align nil)
       (:text "filter-ac-inst")
       (:id 23))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 818)
       (:y 267)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 24))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 784)
       (:y 249)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 10)
       (:id 25))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference filter-ac-inst)
       (:group-id nil)
       (:name "filter-ac-inst")
       (:x 771)
       (:y 297)
       (:w 106)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6000 6530 7203 5049))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "APPROX")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPERAMENT")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 26))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference mos)
       (:group-id nil)
       (:name "mos")
       (:x 886)
       (:y 139)
       (:w 100)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value 4/3)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7200)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SOBREPOSITION")
         (:value 11)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 27))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 906)
       (:y 229)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 28)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 27 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 27 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 27 :in 2)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 27 :in 3)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 10 :in 6)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 17 :in 1)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 2)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 22 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 21 :in 1)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 22 :in 1)))
      (:connection (:from (:box 22 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 24 :out 0)) (:to (:box 26 :in 2)))
      (:connection (:from (:box 25 :out 0)) (:to (:box 26 :in 1)))
      (:connection (:from (:box 26 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 27 :out 0)) (:to (:box 28 :in 0)))
      (:connection (:from (:box 28 :out 0)) (:to (:box 26 :in 0))))))
   (:group-id nil)
   (:name "MOS")
   (:x 1031)
   (:y 87)
   (:w 63)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 4")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output") (:reactive nil)))
   (:id 13))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "TONALIDADE-DIAMANTE")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output 2")
       (:x 304)
       (:y 609)
       (:w 67)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 99)
       (:y 50)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 140)
       (:y 250)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 3) (:name "input 3") (:doc "")))
       (:group-id nil)
       (:name "input 3")
       (:x 132)
       (:y 382)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 3))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 4) (:name "input 4") (:doc "")))
       (:group-id nil)
       (:name "input 4")
       (:x 240)
       (:y 179)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 42)
       (:y 426)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 5))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference range-reduce)
       (:group-id nil)
       (:name "range-reduce")
       (:x 60)
       (:y 491)
       (:w 112)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 4800 7200 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "GRAVE")
         (:value 6000)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "AGUDA")
         (:value 7902)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference filter-ac-inst)
       (:group-id nil)
       (:name "filter-ac-inst")
       (:x 265)
       (:y 517)
       (:w 106)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list 6000 6530 7203 5049))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "APPROX")
         (:value 10)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPERAMENT")
         (:value 2)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 309)
       (:y 470)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8)
       (:id 8))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 354)
       (:y 483)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 4)
       (:id 9))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference choose)
       (:group-id nil)
       (:name "choose")
       (:x 29)
       (:y 179)
       (:w 76)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "NOTELIST")
         (:value (:list (:list 6000 6530) (:list 7203 5049)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CHORD-N")
         (:value (:list 2 3 2))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 196)
       (:y 474)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 265)
       (:y 382)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:library "OM-JI")
       (:type :function)
       (:reference rt->mc)
       (:group-id nil)
       (:name "rt->mc")
       (:x 39)
       (:y 300)
       (:w 77)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "RATIO")
         (:value (:list 1 11/8 7/4))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "FUNDAMENTAL")
         (:value 6000)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 6 :in 2)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 7 :in 2)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 5 :in 0))))))
   (:group-id nil)
   (:name "TONALIDADE-DIAMANTE")
   (:x 43/5)
   (:y 1142/5)
   (:w 175)
   (:h 66)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 3")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 4")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "output 2") (:reactive nil)))
   (:id 14))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 12")
   (:x 1094)
   (:y 37)
   (:w 44)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 7200)
   (:id 15))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 11")
   (:x 1046)
   (:y 28)
   (:w 44)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6000)
   (:id 16))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "troca por notas das areas de afinação")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (851 716)) (:position (104 0)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 5)
       (:y 5)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 2) (:name "input 2") (:doc "")))
       (:group-id nil)
       (:name "input 2")
       (:x 55)
       (:y 5)
       (:w 59)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 1") (:index 1) (:doc "")))
       (:group-id nil)
       (:name "output 1")
       (:x 194)
       (:y 593)
       (:w 68)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 305)
       (:y 593)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 3))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 7")
       (:x 462)
       (:y 28)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 8)
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 6")
       (:x 422)
       (:y -18)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 90)
       (:id 5))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 5")
       (:x 410)
       (:y 43)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 60)
       (:id 6))
      (:box
       (:type :function)
       (:reference interpolation)
       (:group-id nil)
       (:name "interpolation")
       (:x 423)
       (:y 75)
       (:w 108)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SAMPLES")
         (:value 5)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CURVE")
         (:value 0.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 222)
       (:y 366)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 168)
       (:y 301)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference last)
       (:group-id nil)
       (:name "last")
       (:x 221)
       (:y 184)
       (:w 58)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :value)
       (:reference single-float)
       (:group-id nil)
       (:name "aux 4")
       (:x 612)
       (:y 123)
       (:w 43)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0.33)
       (:id 11))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 585)
       (:y 124)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 9)
       (:id 12))
      (:box
       (:type :function)
       (:reference reverse)
       (:group-id nil)
       (:name "reverse")
       (:x 612)
       (:y 45)
       (:w 79)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SEQUENCE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 13))
      (:box
       (:type :function)
       (:reference interpolation)
       (:group-id nil)
       (:name "interpolation")
       (:x 547)
       (:y 154)
       (:w 108)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "BEGIN")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "END")
         (:value 1)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "SAMPLES")
         (:value 5)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CURVE")
         (:value 0.0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :function)
       (:reference flat)
       (:group-id nil)
       (:name "flat")
       (:x 296)
       (:y 354)
       (:w 56)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 3")
       (:x 386)
       (:y 389)
       (:w 35)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 9))
       (:id 16))
      (:box
       (:type :object)
       (:reference chord-seq)
       (:group-id nil)
       (:name "CHORD-SEQ")
       (:x 149)
       (:y 428)
       (:w 296)
       (:h 87)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:showname t)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list 6000))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LONSET")
         (:value (:list 0 200))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LDUR")
         (:value (:list 250))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LVEL")
         (:value (:list 100))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value (:list 0))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value (:list 9))
         (:reactive nil))
        (:input
         (:type :key)
         (:name "llegato")
         (:value 0)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "LONSET") (:reactive nil))
        (:output (:name "LDUR") (:reactive nil))
        (:output (:name "LVEL") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil))
        (:output (:name "llegato") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params (:staff :gf))
       (:value
        (:object
         (:class chord-seq)
         (:slots
          ((:onset 0)
           (:duration 9600)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "CHORD-SEQ")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:lmidic
            (:list
             (:list 7700)
             (:list 7092)
             (:list 6500)
             (:list 7700)
             (:list 6794)
             (:list 6949)
             (:list 7092)
             (:list 6794)
             (:list 7092)
             (:list 7092)
             (:list 6908)
             (:list 7544)
             (:list 7092)
             (:list 6704)
             (:list 7092)
             (:list 6908)
             (:list 6908)
             (:list 7544)
             (:list 6949)
             (:list 6704)
             (:list 7544)
             (:list 6794)
             (:list 6908)
             (:list 7544)
             (:list 6908)
             (:list 6704)
             (:list 7544)
             (:list 6704)
             (:list 6908)
             (:list 7544)
             (:list 6794)
             (:list 6548)
             (:list 7544)
             (:list 6548)
             (:list 6908)
             (:list 7544)
             (:list 6794)
             (:list 6548)
             (:list 7700)
             (:list 6548)
             (:list 6908)
             (:list 7700)
             (:list 6704)
             (:list 6548)
             (:list 7700)
             (:list 6500)
             (:list 6908)
             (:list 7700)))
           (:lonset
            (:list
             0
             200
             400
             600
             800
             1000
             1200
             1400
             1600
             1800
             2000
             2200
             2400
             2600
             2800
             3000
             3200
             3400
             3600
             3800
             4000
             4200
             4400
             4600
             4800
             5000
             5200
             5400
             5600
             5800
             6000
             6200
             6400
             6600
             6800
             7000
             7200
             7400
             7600
             7800
             8000
             8200
             8400
             8600
             8800
             9000
             9200
             9400
             9600))
           (:ldur (:list 200))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 3))
           (:lport (:list nil))
           (:llegato nil)))))
       (:id 17))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "interpolation")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output")
             (:index 1)
             (:doc nil)))
           (:group-id nil)
           (:name "output")
           (:x 235)
           (:y 543)
           (:w 58)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:in
             (:type omin)
             (:index 1)
             (:name "conjunto de notas")
             (:doc "")))
           (:group-id nil)
           (:name "conjunto de notas")
           (:x 303)
           (:y 152)
           (:w 117)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "perfil") (:doc "")))
           (:group-id nil)
           (:name "perfil")
           (:x 38)
           (:y 147)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "oitavador")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 43)
               (:y 47)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 257)
               (:y 417)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 1))
              (:box
               (:type :function)
               (:reference remove-dup)
               (:group-id nil)
               (:name "remove-dup")
               (:x 390)
               (:y 525)
               (:w 105)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value (:list 1 2 3 4))
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value eq)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "DEPTH")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 2))
              (:box
               (:type :value)
               (:reference cons)
               (:group-id nil)
               (:name "aux")
               (:x 138)
               (:y 18)
               (:w 442)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value
                (:list
                 -6000
                 -4800
                 -3600
                 -2400
                 -1200
                 0
                 1200
                 2400
                 3600
                 4800
                 6000
                 7200
                 8400))
               (:id 3))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 318)
               (:y 253)
               (:w 56)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 212)
               (:y 195)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference om+)
               (:group-id nil)
               (:name "om+")
               (:x 134)
               (:y 123)
               (:w 78)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "ARG1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ARG2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 156)
               (:y 283)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 7))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 225)
               (:y 63)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 8)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 2 :out 0))
               (:to (:box 1 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 5 :out 1))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 6 :in 1))))))
           (:group-id nil)
           (:name "oitavador")
           (:x 95)
           (:y 318)
           (:w 90)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 3))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "nota-mais-próxima")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 77)
               (:y 45)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 299)
               (:y 41)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 310)
               (:y 409)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :abstraction)
               (:reference
                (:textfun
                 (:name "lispfunction 2")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:text
                  (:list
                   "(lambda (lista-n)"
                   ""
                   "(loop for x in lista-n collect (loop for y in x collect (abs y))))"))))
               (:group-id nil)
               (:name "lispfunction")
               (:x 311)
               (:y 321)
               (:w 112)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LISTA-N")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 3))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 208)
               (:y 306)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 4))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "OMLOOP")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 29)
                   (:y 19)
                   (:w 50)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 281)
                   (:y 18)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 256)
                   (:y 424)
                   (:w 68)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 2))
                  (:box
                   (:type :special)
                   (:reference collect)
                   (:group-id nil)
                   (:name "collect")
                   (:x 194)
                   (:y 269)
                   (:w 57)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.7 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "data-in")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "push")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "init")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "collect") (:reactive nil))
                    (:output (:name "data-out") (:reactive nil))
                    (:output (:name "init") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :function)
                   (:reference om-)
                   (:group-id nil)
                   (:name "om-")
                   (:x 142)
                   (:y 195)
                   (:w 61)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ARG1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ARG2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :special)
                   (:reference iterate)
                   (:group-id nil)
                   (:name "iterate")
                   (:x 128)
                   (:y 420)
                   (:w 57)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "action")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 5))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 32)
                   (:y 107)
                   (:w 64)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 6)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 4 :in 1)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 3 :out 1))
                   (:to (:box 2 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 3 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 4 :in 0))))))
               (:group-id nil)
               (:name "OMLOOP")
               (:x 109)
               (:y 156)
               (:w 101)
               (:h 58)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 5))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 173)
               (:y 402)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 6))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 297)
               (:y 122)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 7)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 4 :out 1))
               (:to (:box 3 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 5 :in 1))))))
           (:group-id nil)
           (:name "nota-mais-próxima")
           (:x 258)
           (:y 270)
           (:w 144)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 4))
          (:box
           (:type :abstraction)
           (:reference
            (:patch
             (:name "subtituicao")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:grid nil)
             (:lock nil)
             (:boxes
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 1)
                 (:name "input")
                 (:doc "")))
               (:group-id nil)
               (:name "input")
               (:x 38)
               (:y 31)
               (:w 50)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 0))
              (:box
               (:type :io)
               (:reference
                (:in
                 (:type omin)
                 (:index 2)
                 (:name "input 2")
                 (:doc "")))
               (:group-id nil)
               (:name "input 2")
               (:x 292)
               (:y 19)
               (:w 59)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs)
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 1))
              (:box
               (:type :io)
               (:reference
                (:out
                 (:type omout)
                 (:name "output 1")
                 (:index 1)
                 (:doc "")))
               (:group-id nil)
               (:name "output 1")
               (:x 417)
               (:y 510)
               (:w 68)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                 (:t-or-nil t)))
               (:border 0)
               (:roundness 0)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "out-value")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 2))
              (:box
               (:type :value)
               (:reference fixnum)
               (:group-id nil)
               (:name "aux 2")
               (:x 137)
               (:y 316)
               (:w 32)
               (:h 29)
               (:color
                (:color-or-nil
                 (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:lock nil)
               (:inputs)
               (:outputs (:output (:name "value") (:reactive nil)))
               (:value 1)
               (:id 3))
              (:box
               (:type :function)
               (:reference om/=)
               (:group-id nil)
               (:name "om/=")
               (:x 99)
               (:y 346)
               (:w 69)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "NUM1")
                 (:value 0)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "NUM2")
                 (:value 0)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 4))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 135)
               (:y 205)
               (:w 56)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 5))
              (:box
               (:type :function)
               (:reference length)
               (:group-id nil)
               (:name "length")
               (:x 20)
               (:y 299)
               (:w 73)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "SEQUENCE")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 6))
              (:box
               (:type :function)
               (:reference omif)
               (:group-id nil)
               (:name "omif")
               (:x 301)
               (:y 389)
               (:w 62)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "TEST")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "ACTION")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :optional)
                 (:name "else")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 7))
              (:box
               (:type :function)
               (:reference nth-random)
               (:group-id nil)
               (:name "nth-random")
               (:x 201)
               (:y 301)
               (:w 104)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LIST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 8))
              (:box
               (:type :function)
               (:reference list)
               (:group-id nil)
               (:name "list")
               (:x 44)
               (:y 188)
               (:w 54)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :optional)
                 (:name "args")
                 (:value 1)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 9))
              (:box
               (:type :function)
               (:reference flat)
               (:group-id nil)
               (:name "flat")
               (:x 507)
               (:y 414)
               (:w 56)
               (:h 29)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align nil)
               (:icon :left)
               (:lock nil)
               (:lambda nil)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "LST")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "out") (:reactive nil)))
               (:id 10))
              (:box
               (:type :special)
               (:reference collect)
               (:group-id nil)
               (:name "collect")
               (:x 359)
               (:y 399)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.7 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "data-in")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "push")
                 (:value t)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "init")
                 (:value nil)
                 (:reactive nil)))
               (:outputs
                (:output (:name "collect") (:reactive nil))
                (:output (:name "data-out") (:reactive nil))
                (:output (:name "init") (:reactive nil)))
               (:id 11))
              (:box
               (:type :abstraction)
               (:reference
                (:patch
                 (:name "OMLOOP")
                 (:doc "")
                 (:info
                  (:created nil)
                  (:modified nil)
                  (:by *app-name*)
                  (:version 0))
                 (:window (:size nil) (:position nil))
                 (:grid nil)
                 (:lock nil)
                 (:boxes
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 1)
                     (:name "input")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input")
                   (:x 26)
                   (:y 8)
                   (:w 50)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 0))
                  (:box
                   (:type :io)
                   (:reference
                    (:in
                     (:type omin)
                     (:index 2)
                     (:name "input 2")
                     (:doc "")))
                   (:group-id nil)
                   (:name "input 2")
                   (:x 182)
                   (:y 4)
                   (:w 59)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs)
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 1))
                  (:box
                   (:type :io)
                   (:reference
                    (:out
                     (:type omout)
                     (:name "output 1")
                     (:index 1)
                     (:doc "")))
                   (:group-id nil)
                   (:name "output 1")
                   (:x 505)
                   (:y 537)
                   (:w 68)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
                     (:t-or-nil t)))
                   (:border 0)
                   (:roundness 0)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "out-value")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 2))
                  (:box
                   (:type :function)
                   (:reference remove)
                   (:group-id nil)
                   (:name "remove")
                   (:x 519)
                   (:y 473)
                   (:w 80)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "ITEM")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 3))
                  (:box
                   (:type :special)
                   (:reference collect)
                   (:group-id nil)
                   (:name "collect")
                   (:x 433)
                   (:y 419)
                   (:w 57)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.7 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "data-in")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "push")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "init")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs
                    (:output (:name "collect") (:reactive nil))
                    (:output (:name "data-out") (:reactive nil))
                    (:output (:name "init") (:reactive nil)))
                   (:id 4))
                  (:box
                   (:type :function)
                   (:reference omif)
                   (:group-id nil)
                   (:name "omif")
                   (:x 176)
                   (:y 310)
                   (:w 89)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "TEST")
                     (:value nil)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "ACTION")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 5))
                  (:box
                   (:type :function)
                   (:reference om=)
                   (:group-id nil)
                   (:name "om=")
                   (:x 233)
                   (:y 245)
                   (:w 64)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NUM1")
                     (:value 0)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "NUM2")
                     (:value 0)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 6))
                  (:box
                   (:library "OM-JI")
                   (:type :function)
                   (:reference choose)
                   (:group-id nil)
                   (:name "choose")
                   (:x 305)
                   (:y 145)
                   (:w 107)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NOTELIST")
                     (:value
                      (:list (:list 6000 6530) (:list 7203 5049)))
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "CHORD-N")
                     (:value (:list 2))
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 7))
                  (:box
                   (:type :abstraction)
                   (:reference
                    (:textfun
                     (:name "lispfunction")
                     (:doc "")
                     (:info
                      (:created nil)
                      (:modified nil)
                      (:by *app-name*)
                      (:version 0))
                     (:window (:size nil) (:position nil))
                     (:text
                      (:list
                       "(lambda (lista)"
                       "  (apply 'min lista))"))))
                   (:group-id nil)
                   (:name "lispfunction")
                   (:x 204)
                   (:y 117)
                   (:w 102)
                   (:h 48)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:display :mini-view)
                   (:lock nil)
                   (:lambda nil)
                   (:pre-delay 0)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "LISTA")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 8))
                  (:box
                   (:type :function)
                   (:reference arithm-ser)
                   (:group-id nil)
                   (:name "arithm-ser")
                   (:x 489)
                   (:y 195)
                   (:w 96)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "BEGIN")
                     (:value 1)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "END")
                     (:value t)
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "STEP")
                     (:value 1)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 9))
                  (:box
                   (:type :function)
                   (:reference length)
                   (:group-id nil)
                   (:name "length")
                   (:x 465)
                   (:y 97)
                   (:w 73)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "SEQUENCE")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 10))
                  (:box
                   (:library "OM-JI")
                   (:type :function)
                   (:reference choose)
                   (:group-id nil)
                   (:name "choose")
                   (:x 42)
                   (:y 209)
                   (:w 124)
                   (:h 29)
                   (:color nil)
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align nil)
                   (:icon :left)
                   (:lock nil)
                   (:lambda nil)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "NOTELIST")
                     (:value
                      (:list (:list 6000 6530) (:list 7203 5049)))
                     (:reactive nil))
                    (:input
                     (:type :standard)
                     (:name "CHORD-N")
                     (:value (:list 2))
                     (:reactive nil)))
                   (:outputs (:output (:name "out") (:reactive nil)))
                   (:id 11))
                  (:box
                   (:type :special)
                   (:reference iterate)
                   (:group-id nil)
                   (:name "iterate")
                   (:x 400)
                   (:y 536)
                   (:w 57)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "action")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs)
                   (:id 12))
                  (:box
                   (:type :special)
                   (:reference loop-list)
                   (:group-id nil)
                   (:name "list-loop")
                   (:x 442)
                   (:y 264)
                   (:w 64)
                   (:h 42)
                   (:color
                    (:color-or-nil
                     (:color (:color 0.82 0.85 0.7 1.0))
                     (:t-or-nil t)))
                   (:border nil)
                   (:roundness nil)
                   (:text-font nil)
                   (:align :center)
                   (:icon :top)
                   (:inputs
                    (:input
                     (:type :standard)
                     (:name "list")
                     (:value nil)
                     (:reactive nil)))
                   (:outputs (:output (:name "i") (:reactive nil)))
                   (:id 13)))
                 (:connections
                  (:connection
                   (:from (:box 0 :out 0))
                   (:to (:box 11 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 7 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 8 :in 0)))
                  (:connection
                   (:from (:box 1 :out 0))
                   (:to (:box 10 :in 0)))
                  (:connection
                   (:from (:box 3 :out 0))
                   (:to (:box 2 :in 0)))
                  (:connection
                   (:from (:box 4 :out 0))
                   (:to (:box 12 :in 0)))
                  (:connection
                   (:from (:box 4 :out 1))
                   (:to (:box 3 :in 1)))
                  (:connection
                   (:from (:box 5 :out 0))
                   (:to (:box 4 :in 0)))
                  (:connection
                   (:from (:box 6 :out 0))
                   (:to (:box 5 :in 0)))
                  (:connection
                   (:from (:box 7 :out 0))
                   (:to (:box 6 :in 1)))
                  (:connection
                   (:from (:box 8 :out 0))
                   (:to (:box 6 :in 0)))
                  (:connection
                   (:from (:box 9 :out 0))
                   (:to (:box 13 :in 0)))
                  (:connection
                   (:from (:box 10 :out 0))
                   (:to (:box 9 :in 1)))
                  (:connection
                   (:from (:box 11 :out 0))
                   (:to (:box 5 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 7 :in 1)))
                  (:connection
                   (:from (:box 13 :out 0))
                   (:to (:box 11 :in 1))))))
               (:group-id nil)
               (:name "OMLOOP")
               (:x 150)
               (:y 119)
               (:w 86)
               (:h 48)
               (:color nil)
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:display :mini-view)
               (:lock nil)
               (:lambda nil)
               (:pre-delay 0)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "input")
                 (:value nil)
                 (:reactive nil))
                (:input
                 (:type :standard)
                 (:name "input 2")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "output 1") (:reactive nil)))
               (:id 12))
              (:box
               (:type :special)
               (:reference iterate)
               (:group-id nil)
               (:name "iterate")
               (:x 308)
               (:y 496)
               (:w 57)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "action")
                 (:value nil)
                 (:reactive nil)))
               (:outputs)
               (:id 13))
              (:box
               (:type :special)
               (:reference loop-list)
               (:group-id nil)
               (:name "list-loop")
               (:x 290)
               (:y 105)
               (:w 64)
               (:h 42)
               (:color
                (:color-or-nil
                 (:color (:color 0.82 0.85 0.7 1.0))
                 (:t-or-nil t)))
               (:border nil)
               (:roundness nil)
               (:text-font nil)
               (:align :center)
               (:icon :top)
               (:inputs
                (:input
                 (:type :standard)
                 (:name "list")
                 (:value nil)
                 (:reactive nil)))
               (:outputs (:output (:name "i") (:reactive nil)))
               (:id 14)))
             (:connections
              (:connection
               (:from (:box 0 :out 0))
               (:to (:box 12 :in 0)))
              (:connection
               (:from (:box 1 :out 0))
               (:to (:box 14 :in 0)))
              (:connection
               (:from (:box 3 :out 0))
               (:to (:box 4 :in 1)))
              (:connection
               (:from (:box 4 :out 0))
               (:to (:box 7 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 6 :in 0)))
              (:connection
               (:from (:box 5 :out 0))
               (:to (:box 8 :in 0)))
              (:connection
               (:from (:box 6 :out 0))
               (:to (:box 4 :in 0)))
              (:connection
               (:from (:box 7 :out 0))
               (:to (:box 11 :in 0)))
              (:connection
               (:from (:box 8 :out 0))
               (:to (:box 7 :in 1)))
              (:connection
               (:from (:box 9 :out 0))
               (:to (:box 5 :in 0)))
              (:connection
               (:from (:box 10 :out 0))
               (:to (:box 2 :in 0)))
              (:connection
               (:from (:box 11 :out 0))
               (:to (:box 13 :in 0)))
              (:connection
               (:from (:box 11 :out 1))
               (:to (:box 10 :in 0)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 7 :in 2)))
              (:connection
               (:from (:box 12 :out 0))
               (:to (:box 9 :in 0)))
              (:connection
               (:from (:box 14 :out 0))
               (:to (:box 12 :in 1))))))
           (:group-id nil)
           (:name "subtituicao")
           (:x 236)
           (:y 377)
           (:w 99)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock nil)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "input")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "input 2")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "output 1") (:reactive nil)))
           (:id 5)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 0 :in 0))))))
       (:group-id nil)
       (:name "interpolation")
       (:x 57)
       (:y 556/3)
       (:w 108)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "conjunto de notas")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "perfil")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output") (:reactive nil)))
       (:id 18))
      (:box
       (:type :special)
       (:reference collect)
       (:group-id nil)
       (:name "collect")
       (:x 83)
       (:y 358)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.7 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "data-in")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "push")
         (:value t)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "init")
         (:value nil)
         (:reactive nil)))
       (:outputs
        (:output (:name "collect") (:reactive nil))
        (:output (:name "data-out") (:reactive nil))
        (:output (:name "init") (:reactive nil)))
       (:id 19))
      (:box
       (:type :special)
       (:reference iterate)
       (:group-id nil)
       (:name "iterate")
       (:x 37)
       (:y 508)
       (:w 57)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "action")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 20))
      (:box
       (:type :special)
       (:reference loop-list)
       (:group-id nil)
       (:name "list-loop")
       (:x 165)
       (:y 29)
       (:w 64)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "list")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "i") (:reactive nil)))
       (:id 21)))
     (:connections
      (:connection (:from (:box 0 :out 0)) (:to (:box 18 :in 1)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 1 :out 0)) (:to (:box 21 :in 0)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 2)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 17 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 2)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 9 :in 3)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 14 :in 3)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 14 :in 2)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 17 :in 4)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 17 :in 6)))
      (:connection (:from (:box 17 :out 1)) (:to (:box 2 :in 0)))
      (:connection (:from (:box 17 :out 4)) (:to (:box 3 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 19 :in 0)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 0)))
      (:connection (:from (:box 19 :out 1)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 21 :out 0)) (:to (:box 18 :in 0))))))
   (:group-id nil)
   (:name "troca por notas das areas de afinação")
   (:x 72)
   (:y 587)
   (:w 247)
   (:h 48)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "input 2")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output 1") (:reactive nil))
    (:output (:name "out") (:reactive nil)))
   (:id 17))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 143)
   (:y 443)
   (:w 56)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 18))
  (:box
   (:type :function)
   (:reference x-append)
   (:group-id nil)
   (:name "x-append")
   (:x 30)
   (:y 495)
   (:w 90)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "L1?")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "L2?")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 19))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 9")
   (:x 352)
   (:y 493)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 0)
   (:id 20))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 8")
   (:x 212)
   (:y 449)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6)
   (:id 21))
  (:box
   (:type :function)
   (:reference flat)
   (:group-id nil)
   (:name "flat")
   (:x 638)
   (:y 475)
   (:w 56)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "LST")
     (:value nil)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 22))
  (:box
   (:type :function)
   (:reference interpolation)
   (:group-id nil)
   (:name "interpolation")
   (:x 157)
   (:y 536)
   (:w 245)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "BEGIN")
     (:value 0)
     (:reactive nil))
    (:input (:type :standard) (:name "END") (:value 1) (:reactive nil))
    (:input
     (:type :standard)
     (:name "SAMPLES")
     (:value 5)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CURVE")
     (:value 0.0)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 23))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 873)
   (:y 211)
   (:w 76)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2 3 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 24))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ 2")
   (:x 645)
   (:y 343)
   (:w 339)
   (:h 90)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 9))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 6000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ 2")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 7200)
         (:list 7200)
         (:list 7200)
         (:list 6700)
         (:list 6700)
         (:list 6700)))
       (:lonset (:list 0 1000 2000 3000 4000 5000 6000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 9))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 25))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF 2")
   (:x 563)
   (:y 151)
   (:w 294)
   (:h 102)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 500)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points (:list 0 100 200 300 400 500))
       (:y-points (:list 4 4 6 3 5 6))))
     (:add-slots ((:name "BPF 2")))))
   (:id 26))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 7")
   (:x 87)
   (:y 190)
   (:w 44)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 8000)
   (:id 27))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 4")
   (:x 42)
   (:y 189)
   (:w 44)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 6500)
   (:id 28))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux 6")
   (:x 1123)
   (:y 64)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 12)
   (:id 29))
  (:box
   (:type :value)
   (:reference ratio)
   (:group-id nil)
   (:name "aux 5")
   (:x 988)
   (:y 47)
   (:w 50)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 19/11)
   (:id 30))
  (:box
   (:type :object)
   (:reference chord-seq)
   (:group-id nil)
   (:name "CHORD-SEQ")
   (:x 336)
   (:y 344)
   (:w 302)
   (:h 88)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LMIDIC")
     (:value (:list 6000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LONSET")
     (:value (:list 0 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LDUR")
     (:value (:list 1000))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "LVEL")
     (:value (:list 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "loffset")
     (:value (:list 0))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "lchan")
     (:value (:list 9))
     (:reactive nil))
    (:input (:type :key) (:name "llegato") (:value 0) (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "LMIDIC") (:reactive nil))
    (:output (:name "LONSET") (:reactive nil))
    (:output (:name "LDUR") (:reactive nil))
    (:output (:name "LVEL") (:reactive nil))
    (:output (:name "loffset") (:reactive nil))
    (:output (:name "lchan") (:reactive nil))
    (:output (:name "llegato") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params (:staff :g))
   (:value
    (:object
     (:class chord-seq)
     (:slots
      ((:onset 0)
       (:duration 6000)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:name "CHORD-SEQ")
       (:symbolic-date nil)
       (:symbolic-dur nil)
       (:symbolic-dur-extent 0)
       (:extras nil)
       (:lmidic
        (:list
         (:list 7545)
         (:list 7251)
         (:list 6500)
         (:list 7545)
         (:list 6642)
         (:list 7251)))
       (:lonset (:list 0 1000 2000 3000 4000 5000 6000))
       (:ldur (:list 1000))
       (:lvel (:list 100))
       (:loffset (:list 0))
       (:lchan (:list 9))
       (:lport (:list nil))
       (:llegato nil)))))
   (:id 31))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference choose)
   (:group-id nil)
   (:name "choose")
   (:x 259)
   (:y 271)
   (:w 76)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "NOTELIST")
     (:value (:list (:list 6000 6530) (:list 7203 5049)))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "CHORD-N")
     (:value (:list 2 3 2))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 32))
  (:box
   (:type :object)
   (:reference bpf)
   (:group-id nil)
   (:name "BPF")
   (:x 268)
   (:y 152)
   (:w 290)
   (:h 102)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:showname nil)
   (:show-markers t)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value nil)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "X-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "Y-POINTS")
     (:value (:list 0 100))
     (:reactive nil))
    (:input
     (:type :key)
     (:name "decimals")
     (:value 0)
     (:reactive nil)))
   (:outputs
    (:output (:name "SELF") (:reactive nil))
    (:output (:name "X-POINTS") (:reactive nil))
    (:output (:name "Y-POINTS") (:reactive nil))
    (:output (:name "decimals") (:reactive nil)))
   (:window (:size nil) (:position nil))
   (:edition-params)
   (:value
    (:object
     (:class bpf)
     (:slots
      ((:onset 0)
       (:duration 500)
       (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
       (:action nil)
       (:color (:color 0.0S0 0.0S0 0.0S0 1.0))
       (:decimals 0)
       (:x-points (:list 0 100 200 300 400 500))
       (:y-points (:list 5 4 1 5 2 3))))
     (:add-slots ((:name "BPF")))))
   (:id 33))
  (:box
   (:type :function)
   (:reference x->dx)
   (:group-id nil)
   (:name "x->dx")
   (:x 290)
   (:y 16)
   (:w 72)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "SELF")
     (:value (:list 0 1))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 34))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "aux")
   (:x 134)
   (:y 195)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 3)
   (:id 35))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference diamond-identity)
   (:group-id nil)
   (:name "diamond-identity")
   (:x 40)
   (:y 96)
   (:w 132)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "IDENTITY")
     (:value (:list 11 19 97))
     (:reactive nil)))
   (:outputs
    (:output (:name "out0") (:reactive nil))
    (:output (:name "out1") (:reactive nil)))
   (:id 36))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "sieve")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size (1366 725)) (:position (-8 -8)))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output 2") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output 2")
       (:x 186)
       (:y 429)
       (:w 67)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference revel-crible)
       (:group-id nil)
       (:name "REVEL-CRIBLE")
       (:x 277)
       (:y 318)
       (:w 118)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 4")
       (:x 438)
       (:y 55)
       (:w 74)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 11 16 64))
       (:id 2))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 3")
       (:x 339)
       (:y 57)
       (:w 74)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 19 16 64))
       (:id 3))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference c-union)
       (:group-id nil)
       (:name "C-UNION")
       (:x 324)
       (:y 218)
       (:w 117)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CRIBLE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux 2")
       (:x 235)
       (:y 32)
       (:w 67)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 7 12 64))
       (:id 5))
      (:box
       (:type :value)
       (:reference cons)
       (:group-id nil)
       (:name "aux")
       (:x 138)
       (:y 31)
       (:w 74)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value (:list 11 16 64))
       (:id 6))
      (:box
       (:library "Mathtools")
       (:type :function)
       (:reference c-intersection)
       (:group-id nil)
       (:name "C-INTERSECTION")
       (:x 154)
       (:y 163)
       (:w 135)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CRIBLE")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:library "Mathtools")
       (:type :object)
       (:reference crible)
       (:group-id nil)
       (:name "CRIBLE 4")
       (:x 461)
       (:y 101)
       (:w 89)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :text)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CR-EXP")
         (:value (:list 2 0 18))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CR-EXP") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class crible)
         (:slots ((:cr-exp (:list 13 13 64))))))
       (:id 8))
      (:box
       (:library "Mathtools")
       (:type :object)
       (:reference crible)
       (:group-id nil)
       (:name "CRIBLE 3")
       (:x 328)
       (:y 101)
       (:w 89)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :text)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CR-EXP")
         (:value (:list 2 0 18))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CR-EXP") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object
         (:class crible)
         (:slots ((:cr-exp (:list 19 16 64))))))
       (:id 9))
      (:box
       (:library "Mathtools")
       (:type :object)
       (:reference crible)
       (:group-id nil)
       (:name "CRIBLE 2")
       (:x 211)
       (:y 82)
       (:w 89)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :text)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CR-EXP")
         (:value (:list 2 0 18))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CR-EXP") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object (:class crible) (:slots ((:cr-exp (:list 2 0 18))))))
       (:id 10))
      (:box
       (:library "Mathtools")
       (:type :object)
       (:reference crible)
       (:group-id nil)
       (:name "CRIBLE")
       (:x 131)
       (:y 82)
       (:w 79)
       (:h 50)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :text)
       (:showname nil)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "CR-EXP")
         (:value (:list 2 0 18))
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "CR-EXP") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params)
       (:value
        (:object (:class crible) (:slots ((:cr-exp (:list 2 0 18))))))
       (:id 11))
      (:box
       (:type :function)
       (:reference om-random)
       (:group-id nil)
       (:name "om-random")
       (:x 652)
       (:y 55)
       (:w 103)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LOW")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "HIGH")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :special)
       (:reference repeat-n)
       (:group-id nil)
       (:name "repeat-n")
       (:x 694)
       (:y 155)
       (:w 89)
       (:h 28)
       (:color
        (:color-or-nil
         (:color (:color 0.82 0.85 0.7 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:icon :left)
       (:lock nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "self")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "num")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "collected results") (:reactive nil)))
       (:id 13))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 735)
       (:y 120)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 6)
       (:id 14))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 664)
       (:y 20)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 7)
       (:id 15))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 711)
       (:y 20)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 13)
       (:id 16))
      (:box
       (:type :function)
       (:reference sort-list)
       (:group-id nil)
       (:name "sort-list")
       (:x 469)
       (:y 392)
       (:w 80)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 17))
      (:box
       (:type :function)
       (:reference x-append)
       (:group-id nil)
       (:name "x-append")
       (:x 759)
       (:y 339)
       (:w 90)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "L1?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "L2?")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "lst?")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 886)
       (:y 275)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 64)
       (:id 19))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "value box")
       (:x 792)
       (:y 278)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 13)
       (:id 20)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 2 :out 0)) (:to (:box 8 :in 1)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 9 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 1 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 7 :in 1)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 17 :in 0)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 13 :in 1)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 18 :in 2)))
      (:connection (:from (:box 20 :out 0)) (:to (:box 18 :in 1))))))
   (:group-id nil)
   (:name "sieve")
   (:x 51)
   (:y 6)
   (:w 88)
   (:h 66)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs)
   (:outputs (:output (:name "output 2") (:reactive nil)))
   (:id 37))
  (:box
   (:type :function)
   (:reference om-random)
   (:group-id nil)
   (:name "om-random")
   (:x 1191)
   (:y 74)
   (:w 103)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input (:type :standard) (:name "LOW") (:value 0) (:reactive nil))
    (:input
     (:type :standard)
     (:name "HIGH")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 38))
  (:box
   (:type :function)
   (:reference om/)
   (:group-id nil)
   (:name "om/")
   (:x 1212)
   (:y 138)
   (:w 60)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "ARG1")
     (:value 1)
     (:reactive nil))
    (:input
     (:type :standard)
     (:name "ARG2")
     (:value 1)
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 39))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1265)
   (:y 103)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 16)
   (:id 40))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1203)
   (:y 39)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 17)
   (:id 41))
  (:box
   (:type :value)
   (:reference fixnum)
   (:group-id nil)
   (:name "value box")
   (:x 1250)
   (:y 39)
   (:w 32)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value 31)
   (:id 42))
  (:box
   (:type :abstraction)
   (:reference
    (:patch
     (:name "play | stop")
     (:doc "")
     (:info
      (:created nil)
      (:modified nil)
      (:by *app-name*)
      (:version 0))
     (:window (:size nil) (:position nil))
     (:grid nil)
     (:lock nil)
     (:boxes
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "output") (:index 1) (:doc nil)))
       (:group-id nil)
       (:name "output")
       (:x 297)
       (:y 642)
       (:w 58)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 0))
      (:box
       (:type :io)
       (:reference
        (:in (:type omin) (:index 1) (:name "input") (:doc "")))
       (:group-id nil)
       (:name "input")
       (:x 43)
       (:y 12)
       (:w 50)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs)
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 1))
      (:box
       (:type :io)
       (:reference
        (:out (:type omout) (:name "out") (:index 2) (:doc "")))
       (:group-id nil)
       (:name "out")
       (:x 604)
       (:y 599)
       (:w 40)
       (:h 42)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
         (:t-or-nil t)))
       (:border 0)
       (:roundness 0)
       (:text-font nil)
       (:align :center)
       (:icon :top)
       (:inputs
        (:input
         (:type :standard)
         (:name "out-value")
         (:value nil)
         (:reactive nil)))
       (:outputs)
       (:id 2))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 3")
       (:x 635)
       (:y 167)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 3))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "omloop")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 13)
           (:y 4)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 329)
           (:y 547)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 2) (:name "chord") (:doc "")))
           (:group-id nil)
           (:name "chord")
           (:x 526)
           (:y 13)
           (:w 52)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 2))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 3) (:name "dinamic") (:doc "")))
           (:group-id nil)
           (:name "dinamic")
           (:x 576)
           (:y 12)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 4) (:name "channel") (:doc "")))
           (:group-id nil)
           (:name "channel")
           (:x 695)
           (:y 15)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 5) (:name "tempo") (:doc "")))
           (:group-id nil)
           (:name "tempo")
           (:x 314)
           (:y 66)
           (:w 56)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 6) (:name "input 2") (:doc "")))
           (:group-id nil)
           (:name "input 2")
           (:x 883)
           (:y -4)
           (:w 59)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference choose)
           (:group-id nil)
           (:name "choose")
           (:x 617)
           (:y 131)
           (:w 76)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTELIST")
             (:value (:list (:list 6000 6530) (:list 7203 5049)))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CHORD-N")
             (:value (:list 2 3 2))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference choose)
           (:group-id nil)
           (:name "choose")
           (:x 567)
           (:y 130)
           (:w 76)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTELIST")
             (:value (:list (:list 6000 6530) (:list 7203 5049)))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CHORD-N")
             (:value (:list 2 3 2))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:library "OM-JI")
           (:type :function)
           (:reference choose)
           (:group-id nil)
           (:name "choose")
           (:x 502)
           (:y 123)
           (:w 76)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "NOTELIST")
             (:value (:list (:list 6000 6530) (:list 7203 5049)))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "CHORD-N")
             (:value (:list 2 3 2))
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 252)
           (:y 159)
           (:w 62)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :function)
           (:reference remove)
           (:group-id nil)
           (:name "remove")
           (:x 316)
           (:y 503)
           (:w 80)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "ITEM")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "SEQUENCE")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "aux 3")
           (:x 473)
           (:y 302)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value ",")
           (:id 12))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 456)
           (:y 418)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 13))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 96)
           (:y 158)
           (:w 62)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 14))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "aux")
           (:x 694)
           (:y 207)
           (:w 33)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value ";")
           (:id 15))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 573)
           (:y 295)
           (:w 121)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 16))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 164)
           (:y 339)
           (:w 115)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 17))
          (:box
           (:type :function)
           (:reference plusp)
           (:group-id nil)
           (:name "plusp")
           (:x 14)
           (:y 180)
           (:w 68)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "X")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 18))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 165)
           (:y 429)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 19))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 145)
           (:y 532)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 20))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 979)
           (:y 80)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 21))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 409)
           (:y 147)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 22))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 11)
           (:y 84)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 23)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 23 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 22 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 21 :in 0)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 16 :in 3)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 16 :in 1)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 16 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 13 :in 0)))
          (:connection (:from (:box 11 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 12 :out 0)) (:to (:box 13 :in 1)))
          (:connection (:from (:box 13 :out 0)) (:to (:box 17 :in 1)))
          (:connection (:from (:box 14 :out 0)) (:to (:box 16 :in 2)))
          (:connection (:from (:box 15 :out 0)) (:to (:box 16 :in 4)))
          (:connection (:from (:box 16 :out 0)) (:to (:box 13 :in 2)))
          (:connection (:from (:box 17 :out 0)) (:to (:box 19 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 14 :in 0)))
          (:connection (:from (:box 18 :out 0)) (:to (:box 17 :in 0)))
          (:connection (:from (:box 19 :out 0)) (:to (:box 20 :in 0)))
          (:connection (:from (:box 19 :out 1)) (:to (:box 11 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 21 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 22 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 23 :out 0)) (:to (:box 14 :in 1)))
          (:connection
           (:from (:box 23 :out 0))
           (:to (:box 18 :in 0))))))
       (:group-id nil)
       (:name "omloop")
       (:x 20)
       (:y 458)
       (:w 286)
       (:h 58)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "chord")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "dinamic")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "channel")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "tempo")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "input 2")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 4))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux")
       (:x 480)
       (:y 340)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 0)
       (:id 5))
      (:box
       (:type :function)
       (:reference dx->x)
       (:group-id nil)
       (:name "dx->x")
       (:x 501)
       (:y 381)
       (:w 72)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "START")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LIST")
         (:value (:list 1 1))
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 6))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "lispfunction 2")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           "(lambda (lista-n)"
           ""
           "(loop for y in lista-n collect (abs y)))"))))
       (:group-id nil)
       (:name "lispfunction")
       (:x 437)
       (:y 250)
       (:w 112)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LISTA-N")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 7))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "omloop")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:in (:type omin) (:index 1) (:name "input") (:doc "")))
           (:group-id nil)
           (:name "input")
           (:x 5)
           (:y 5)
           (:w 50)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs)
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 0))
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 146)
           (:y 274)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 1))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 2")
           (:x 162)
           (:y 106)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 1)
           (:id 2))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux")
           (:x 84)
           (:y 73)
           (:w 32)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 0)
           (:id 3))
          (:box
           (:type :function)
           (:reference omif)
           (:group-id nil)
           (:name "omif")
           (:x 142)
           (:y 136)
           (:w 62)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "TEST")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "ACTION")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "else")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 4))
          (:box
           (:type :special)
           (:reference collect)
           (:group-id nil)
           (:name "collect")
           (:x 98)
           (:y 195)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.7 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "data-in")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "push")
             (:value t)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "init")
             (:value nil)
             (:reactive nil)))
           (:outputs
            (:output (:name "collect") (:reactive nil))
            (:output (:name "data-out") (:reactive nil))
            (:output (:name "init") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference plusp)
           (:group-id nil)
           (:name "plusp")
           (:x 45)
           (:y 139)
           (:w 68)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "X")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :special)
           (:reference iterate)
           (:group-id nil)
           (:name "iterate")
           (:x 46)
           (:y 274)
           (:w 57)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "action")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 7))
          (:box
           (:type :special)
           (:reference loop-list)
           (:group-id nil)
           (:name "list-loop")
           (:x 8)
           (:y 69)
           (:w 64)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 0.82 0.85 0.7 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "list")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "i") (:reactive nil)))
           (:id 8)))
         (:connections
          (:connection (:from (:box 0 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 4 :in 2)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 4 :in 1)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 0)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 5 :out 1)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 6 :in 0))))))
       (:group-id nil)
       (:name "omloop")
       (:x 616)
       (:y 96)
       (:w 79)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "input")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 8))
      (:box
       (:type :function)
       (:reference first)
       (:group-id nil)
       (:name "first")
       (:x 685)
       (:y 266)
       (:w 60)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "LIST")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 9))
      (:box
       (:type :function)
       (:reference om-)
       (:group-id nil)
       (:name "om-")
       (:x 642)
       (:y 319)
       (:w 61)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 1)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 10))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "lispfunction 3")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           "(lambda (listadetempo a)"
           "(loop :for cknloop :in listadetempo :collect (if (= 0 cknloop) (setq a (+ a 1)) nil)))"))))
       (:group-id nil)
       (:name "lispfunction 2")
       (:x 589)
       (:y 197)
       (:w 112)
       (:h 48)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "LISTADETEMPO")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "A")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 11))
      (:box
       (:type :function)
       (:reference om+)
       (:group-id nil)
       (:name "om+")
       (:x 621)
       (:y 404)
       (:w 65)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "ARG1")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "ARG2")
         (:value 0)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 12))
      (:box
       (:type :value)
       (:reference fixnum)
       (:group-id nil)
       (:name "aux 2")
       (:x 676)
       (:y 374)
       (:w 32)
       (:h 29)
       (:color
        (:color-or-nil
         (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
         (:t-or-nil t)))
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:lock nil)
       (:inputs)
       (:outputs (:output (:name "value") (:reactive nil)))
       (:value 1)
       (:id 13))
      (:box
       (:type :function)
       (:reference save-as-text)
       (:group-id nil)
       (:name "save-as-text")
       (:x 329)
       (:y 569)
       (:w 107)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :optional)
         (:name "path")
         (:value "data")
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 14))
      (:box
       (:type :abstraction)
       (:reference
        (:textfun
         (:name "my-function")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:text
          (:list
           "(lambda (self) "
           " "
           ""
           "(defun normalize-chord-seq (chrdseq)"
           "  (let* ((xdx (x->dx (lonset chrdseq)))"
           "         (filt-durs1 (mapcar 'list-min (ldur chrdseq)))"
           "         (lst-durs (mapcar 'list xdx filt-durs1))"
           "         (filt-durs2 (mapcar 'list-min lst-durs))"
           "         (newdurs (loop "
           "                   for pt in (lmidic chrdseq)"
           "                   for drs in filt-durs2"
           "                   collect (repeat-n drs (length pt)))))"
           "    (make-instance 'chord-seq "
           "                   :lmidic (lmidic chrdseq)"
           "                   :lonset (lonset chrdseq)"
           "                   :ldur newdurs)))"
           ""
           "  (let* ((newchrdseq (if (typep self 'note) "
           "                           (Objfromobjs (Objfromobjs self (make-instance 'chord)) (make-instance 'chord-seq))"
           "                           (Objfromobjs self (make-instance 'chord-seq))))"
           ""
           "         (newcs (normalize-chord-seq newchrdseq))"
           "         (onsets (Lonset newcs))"
           "         (dur (Ldur newcs))"
           "         (newonsets (if (= 2 (length onsets)) (x->dx  onsets) (butlast (x->dx onsets))))"
           "         (newdurs (mapcar 'first dur))"
           "         (resultat1 "
           "          (x-append "
           "          (flat"
           "           (list (mapcar #'(lambda (x y) (if (= 0 (- x y)) x "
           "                                             (list x (- x y))))"
           "                         newdurs newonsets)"
           "                 (last newdurs)))"
           "          (last-elem newdurs)))"
           "         (resultat2 (butlast"
           "                     (if (= 0 (first onsets)) resultat1 (cons (* -1 (first onsets)) resultat1)))))"
           "    "
           "   (let ((result (remove nil (mapcar #'(lambda (x) (if (not (or (= x 1) (= x -1))) x ))"
           "          resultat2))))"
           "         (if (= 2 (length onsets)) (list (car result) (second result)) result))"
           "   )"
           "  )"))))
       (:group-id nil)
       (:name "my-function")
       (:x 8)
       (:y 192)
       (:w 104)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock nil)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 15))
      (:box
       (:type :object)
       (:reference voice)
       (:group-id nil)
       (:name nil)
       (:x 34)
       (:y 66)
       (:w 312)
       (:h 114)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :mini-view)
       (:showname nil)
       (:show-markers t)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SELF")
         (:value nil)
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TREE")
         (:value (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "LMIDIC")
         (:value (:list (:list 6000)))
         (:reactive nil))
        (:input
         (:type :standard)
         (:name "TEMPO")
         (:value 60)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lvel")
         (:value 100)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "loffset")
         (:value 0)
         (:reactive nil))
        (:input
         (:type :key)
         (:name "lchan")
         (:value 1)
         (:reactive nil)))
       (:outputs
        (:output (:name "SELF") (:reactive nil))
        (:output (:name "TREE") (:reactive nil))
        (:output (:name "LMIDIC") (:reactive nil))
        (:output (:name "TEMPO") (:reactive nil))
        (:output (:name "lvel") (:reactive nil))
        (:output (:name "loffset") (:reactive nil))
        (:output (:name "lchan") (:reactive nil)))
       (:window (:size nil) (:position nil))
       (:edition-params
        (:time-map
         (:list
          (:list -1000 0)
          (:list 0 7.5)
          (:list 1000 13.0)
          (:list 2000 18.5)
          (:list 3000 24.0))))
       (:value
        (:object
         (:class voice)
         (:slots
          ((:onset 0)
           (:duration 3999)
           (:interpol (:number-or-nil (:number 50) (:t-or-nil nil)))
           (:name "VOICE")
           (:symbolic-date nil)
           (:symbolic-dur nil)
           (:symbolic-dur-extent 0)
           (:extras nil)
           (:tree
            (:list 1 (:list (:list (:list 4 4) (:list 1 1 1 1)))))
           (:lmidic (:list 6000))
           (:lonset (:list 0 1000 2000 3000 4000))
           (:ldur (:list 999))
           (:lvel (:list 100))
           (:loffset (:list 0))
           (:lchan (:list 1))
           (:lport (:list nil))
           (:llegato nil)
           (:tempo 60)))))
       (:id 16))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "my-patch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 93)
           (:y 631)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction 4")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (lista)"
               ""
               "(defun numlist-to-string (lst)"
               "  (when lst"
               "    (concatenate 'string "
               "                 (write-to-string (car lst)) (numlist-to-string (cdr lst)))))"
               "(numlist-to-string lista))"
               ""
               ";; Código de \"https://gist.github.com/tompurl/5174818\""))))
           (:group-id nil)
           (:name "lispfunction 4")
           (:x 37)
           (:y 237)
           (:w 112)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LISTA")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 5")
           (:x 135)
           (:y 139)
           (:w 37)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value .txt)
           (:id 2))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 53)
           (:y 169)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 4")
           (:x 164)
           (:y 40)
           (:w 44)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 100)
           (:id 4))
          (:box
           (:type :function)
           (:reference om-random)
           (:group-id nil)
           (:name "om-random")
           (:x 82)
           (:y 80)
           (:w 103)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LOW")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "HIGH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 179)
           (:y 548)
           (:w 54)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "args")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference osc-send)
           (:group-id nil)
           (:name "osc-send")
           (:x 343)
           (:y 442)
           (:w 87)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BUNDLE")
             (:value (:list "/test" 0))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "HOST")
             (:value "127.0.0.1")
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PORT")
             (:value 3002)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 214)
           (:y 429)
           (:w 54)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "args")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 8))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "value box")
           (:x 146)
           (:y 390)
           (:w 95)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "/note")
           (:id 9))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 89)
           (:y 514)
           (:w 54)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 93)
           (:y 577)
           (:w 60)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 11))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "value box")
           (:x 34)
           (:y 127)
           (:w 41)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value play)
           (:id 12)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 8 :in 1)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 10 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 2)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 10 :in 1)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 8 :in 0)))
          (:connection (:from (:box 10 :out 0)) (:to (:box 11 :in 0)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 0 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 12 :out 0))
           (:to (:box 3 :in 0))))))
       (:group-id nil)
       (:name "my-patch")
       (:x 423)
       (:y 455)
       (:w 90)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs)
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 17))
      (:box
       (:type :function)
       (:reference print)
       (:group-id nil)
       (:name "print")
       (:x 369)
       (:y 522)
       (:w 64)
       (:h 29)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align nil)
       (:icon :left)
       (:lock nil)
       (:lambda nil)
       (:inputs
        (:input
         (:type :standard)
         (:name "SOMETHING")
         (:value nil)
         (:reactive nil)))
       (:outputs (:output (:name "out") (:reactive nil)))
       (:id 18))
      (:box
       (:type :abstraction)
       (:reference
        (:patch
         (:name "my-patch")
         (:doc "")
         (:info
          (:created nil)
          (:modified nil)
          (:by *app-name*)
          (:version 0))
         (:window (:size nil) (:position nil))
         (:grid nil)
         (:lock nil)
         (:boxes
          (:box
           (:type :io)
           (:reference
            (:out
             (:type omout)
             (:name "output 1")
             (:index 1)
             (:doc "")))
           (:group-id nil)
           (:name "output 1")
           (:x 93)
           (:y 631)
           (:w 68)
           (:h 42)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 0.0S0))
             (:t-or-nil t)))
           (:border 0)
           (:roundness 0)
           (:text-font nil)
           (:align :center)
           (:icon :top)
           (:inputs
            (:input
             (:type :standard)
             (:name "out-value")
             (:value nil)
             (:reactive nil)))
           (:outputs)
           (:id 0))
          (:box
           (:type :abstraction)
           (:reference
            (:textfun
             (:name "lispfunction 4")
             (:doc "")
             (:info
              (:created nil)
              (:modified nil)
              (:by *app-name*)
              (:version 0))
             (:window (:size nil) (:position nil))
             (:text
              (:list
               "(lambda (lista)"
               ""
               "(defun numlist-to-string (lst)"
               "  (when lst"
               "    (concatenate 'string "
               "                 (write-to-string (car lst)) (numlist-to-string (cdr lst)))))"
               "(numlist-to-string lista))"
               ""
               ";; Código de \"https://gist.github.com/tompurl/5174818\""))))
           (:group-id nil)
           (:name "lispfunction 4")
           (:x 37)
           (:y 237)
           (:w 112)
           (:h 48)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align :center)
           (:display :mini-view)
           (:lock :eval-once)
           (:lambda nil)
           (:pre-delay 0)
           (:inputs
            (:input
             (:type :standard)
             (:name "LISTA")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 1))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "aux 5")
           (:x 135)
           (:y 139)
           (:w 37)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value .txt)
           (:id 2))
          (:box
           (:type :function)
           (:reference x-append)
           (:group-id nil)
           (:name "x-append")
           (:x 53)
           (:y 169)
           (:w 90)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "L1?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "L2?")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "lst?")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 3))
          (:box
           (:type :value)
           (:reference fixnum)
           (:group-id nil)
           (:name "aux 4")
           (:x 164)
           (:y 40)
           (:w 44)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value 100)
           (:id 4))
          (:box
           (:type :function)
           (:reference om-random)
           (:group-id nil)
           (:name "om-random")
           (:x 82)
           (:y 80)
           (:w 103)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LOW")
             (:value 0)
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "HIGH")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 5))
          (:box
           (:type :function)
           (:reference osc-send)
           (:group-id nil)
           (:name "osc-send")
           (:x 343)
           (:y 442)
           (:w 87)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "BUNDLE")
             (:value (:list "/test" 0))
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "HOST")
             (:value "127.0.0.1")
             (:reactive nil))
            (:input
             (:type :standard)
             (:name "PORT")
             (:value 3002)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 6))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 214)
           (:y 429)
           (:w 54)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "args")
             (:value 1)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value 1)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 7))
          (:box
           (:type :value)
           (:reference simple-base-string)
           (:group-id nil)
           (:name "value box")
           (:x 146)
           (:y 390)
           (:w 95)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value "/note-pause")
           (:id 8))
          (:box
           (:type :function)
           (:reference list)
           (:group-id nil)
           (:name "list")
           (:x 89)
           (:y 514)
           (:w 54)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil))
            (:input
             (:type :optional)
             (:name "args")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 9))
          (:box
           (:type :function)
           (:reference first)
           (:group-id nil)
           (:name "first")
           (:x 93)
           (:y 577)
           (:w 60)
           (:h 29)
           (:color nil)
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:icon :left)
           (:lock nil)
           (:lambda nil)
           (:inputs
            (:input
             (:type :standard)
             (:name "LIST")
             (:value nil)
             (:reactive nil)))
           (:outputs (:output (:name "out") (:reactive nil)))
           (:id 10))
          (:box
           (:type :value)
           (:reference symbol)
           (:group-id nil)
           (:name "value box")
           (:x 34)
           (:y 127)
           (:w 41)
           (:h 29)
           (:color
            (:color-or-nil
             (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
             (:t-or-nil t)))
           (:border nil)
           (:roundness nil)
           (:text-font nil)
           (:align nil)
           (:lock nil)
           (:inputs)
           (:outputs (:output (:name "value") (:reactive nil)))
           (:value play)
           (:id 11)))
         (:connections
          (:connection (:from (:box 1 :out 0)) (:to (:box 7 :in 1)))
          (:connection (:from (:box 1 :out 0)) (:to (:box 9 :in 0)))
          (:connection (:from (:box 2 :out 0)) (:to (:box 3 :in 2)))
          (:connection (:from (:box 3 :out 0)) (:to (:box 1 :in 0)))
          (:connection (:from (:box 4 :out 0)) (:to (:box 5 :in 1)))
          (:connection (:from (:box 5 :out 0)) (:to (:box 3 :in 1)))
          (:connection (:from (:box 6 :out 0)) (:to (:box 9 :in 1)))
          (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 0)))
          (:connection (:from (:box 8 :out 0)) (:to (:box 7 :in 0)))
          (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 0)))
          (:connection
           (:from (:box 10 :out 0))
           (:to (:box 0 :in 0))
           (:attributes
            (:color
             (:color 0.2 0.4 0.5 1.0)
             :style
             :curved
             :modif
             nil)))
          (:connection
           (:from (:box 11 :out 0))
           (:to (:box 3 :in 0))))))
       (:group-id nil)
       (:name "my-patch")
       (:x 607)
       (:y 488)
       (:w 90)
       (:h 60)
       (:color nil)
       (:border nil)
       (:roundness nil)
       (:text-font nil)
       (:align :center)
       (:display :hidden)
       (:lock :eval-once)
       (:lambda nil)
       (:pre-delay 0)
       (:inputs)
       (:outputs (:output (:name "output 1") (:reactive nil)))
       (:id 19)))
     (:connections
      (:connection (:from (:box 1 :out 0)) (:to (:box 16 :in 0)))
      (:connection (:from (:box 3 :out 0)) (:to (:box 11 :in 1)))
      (:connection (:from (:box 4 :out 0)) (:to (:box 14 :in 0)))
      (:connection (:from (:box 5 :out 0)) (:to (:box 6 :in 0)))
      (:connection (:from (:box 6 :out 0)) (:to (:box 4 :in 4)))
      (:connection (:from (:box 7 :out 0)) (:to (:box 6 :in 1)))
      (:connection (:from (:box 8 :out 0)) (:to (:box 11 :in 0)))
      (:connection (:from (:box 9 :out 0)) (:to (:box 10 :in 1)))
      (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 9 :in 0)))
      (:connection (:from (:box 11 :out 0)) (:to (:box 10 :in 0)))
      (:connection (:from (:box 12 :out 0)) (:to (:box 4 :in 5)))
      (:connection (:from (:box 13 :out 0)) (:to (:box 12 :in 1)))
      (:connection (:from (:box 14 :out 0)) (:to (:box 0 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 4 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 7 :in 0)))
      (:connection (:from (:box 15 :out 0)) (:to (:box 8 :in 0)))
      (:connection (:from (:box 16 :out 0)) (:to (:box 15 :in 0)))
      (:connection (:from (:box 16 :out 2)) (:to (:box 4 :in 1)))
      (:connection (:from (:box 16 :out 4)) (:to (:box 4 :in 2)))
      (:connection (:from (:box 16 :out 6)) (:to (:box 4 :in 3)))
      (:connection (:from (:box 17 :out 0)) (:to (:box 18 :in 0)))
      (:connection (:from (:box 18 :out 0)) (:to (:box 14 :in 1)))
      (:connection (:from (:box 19 :out 0)) (:to (:box 2 :in 0))))))
   (:group-id nil)
   (:name "play | stop")
   (:x 23)
   (:y 667)
   (:w 106)
   (:h 28)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align :center)
   (:display :mini-view)
   (:lock nil)
   (:lambda nil)
   (:pre-delay 0)
   (:inputs
    (:input
     (:type :standard)
     (:name "input")
     (:value nil)
     (:reactive nil)))
   (:outputs
    (:output (:name "output") (:reactive nil))
    (:output (:name "out") (:reactive nil)))
   (:id 43))
  (:box
   (:type :value)
   (:reference cons)
   (:group-id nil)
   (:name "value box")
   (:x 1038)
   (:y 546)
   (:w 35)
   (:h 29)
   (:color
    (:color-or-nil
     (:color (:color 1.0S0 1.0S0 1.0S0 1.0))
     (:t-or-nil t)))
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:lock nil)
   (:inputs)
   (:outputs (:output (:name "value") (:reactive nil)))
   (:value (:list 9))
   (:id 44))
  (:comment
   (:x 250)
   (:y 447)
   (:w 336)
   (:h 54)
   (:fgcolor nil)
   (:bgcolor nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:text
    "6 contornos melódicos. 

O primeiro é o de Partch e o último o de Wilson.")
   (:id 45))
  (:box
   (:library "OM-JI")
   (:type :function)
   (:reference play)
   (:group-id nil)
   (:name "play")
   (:x 238)
   (:y 660)
   (:w 61)
   (:h 29)
   (:color nil)
   (:border nil)
   (:roundness nil)
   (:text-font nil)
   (:align nil)
   (:icon :left)
   (:lock nil)
   (:lambda nil)
   (:inputs
    (:input
     (:type :standard)
     (:name "CKN")
     (:value (:list nil))
     (:reactive nil)))
   (:outputs (:output (:name "out") (:reactive nil)))
   (:id 46)))
 (:connections
  (:connection (:from (:box 6 :out 0)) (:to (:box 12 :in 3)))
  (:connection
   (:from (:box 8 :out 0))
   (:to (:box 33 :in 2))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 9 :out 0))
   (:to (:box 26 :in 2))
   (:attributes
    (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 10 :out 0)) (:to (:box 12 :in 1)))
  (:connection
   (:from (:box 11 :out 0))
   (:to (:box 9 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.5019608 0.2509804 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 12 :out 0)) (:to (:box 46 :in 0)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 9 :in 1))
   (:attributes
    (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 19 :in 0))
   (:attributes
    (:color
     (:color 0.0S0 0.0S0 1.0S0 1.0)
     :style
     nil
     :modif
     (0 6543/119510))))
  (:connection
   (:from (:box 13 :out 0))
   (:to (:box 24 :in 0))
   (:attributes
    (:color (:color 0.0S0 0.0S0 1.0S0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 19 :in 1))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 1.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 14 :out 0))
   (:to (:box 32 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 15 :out 0)) (:to (:box 13 :in 2)))
  (:connection (:from (:box 16 :out 0)) (:to (:box 13 :in 1)))
  (:connection
   (:from (:box 17 :out 0))
   (:to (:box 12 :in 2))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.0 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     (1828/127239 0))))
  (:connection
   (:from (:box 17 :out 1))
   (:to (:box 12 :in 4))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 0.5019608 0.0 1.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 18 :out 0))
   (:to (:box 23 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     :rounded
     :modif
     nil)))
  (:connection
   (:from (:box 19 :out 0))
   (:to (:box 17 :in 0))
   (:attributes
    (:color (:color 0.0S0 1.0S0 0.0S0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 20 :out 0)) (:to (:box 23 :in 3)))
  (:connection (:from (:box 21 :out 0)) (:to (:box 23 :in 2)))
  (:connection
   (:from (:box 22 :out 0))
   (:to (:box 23 :in 1))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 0.0 1.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 23 :out 0))
   (:to (:box 17 :in 1))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.0 0.5019608 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 24 :out 0))
   (:to (:box 25 :in 1))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 0.0 1.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 25 :out 1))
   (:to (:box 22 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 0.0 1.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 26 :out 2))
   (:to (:box 24 :in 1))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 0.0 0.0 1.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 27 :out 0)) (:to (:box 14 :in 2)))
  (:connection (:from (:box 28 :out 0)) (:to (:box 14 :in 1)))
  (:connection (:from (:box 29 :out 0)) (:to (:box 13 :in 3)))
  (:connection
   (:from (:box 31 :out 1))
   (:to (:box 18 :in 0))
   (:attributes
    (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
  (:connection
   (:from (:box 32 :out 0))
   (:to (:box 31 :in 1))
   (:attributes
    (:color (:color 1.0S0 0.0S0 0.0S0 1.0) :style nil :modif nil)))
  (:connection (:from (:box 33 :out 2)) (:to (:box 32 :in 1)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 8 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection
   (:from (:box 34 :out 0))
   (:to (:box 11 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 35 :out 0)) (:to (:box 14 :in 3)))
  (:connection
   (:from (:box 36 :out 1))
   (:to (:box 14 :in 0))
   (:attributes
    (:color
     (:color-or-nil (:color (:color 1.0 0.0 0.0 1.0)) (:t-or-nil t))
     :style
     nil
     :modif
     (0 0))))
  (:connection
   (:from (:box 37 :out 0))
   (:to (:box 34 :in 0))
   (:attributes
    (:color
     (:color-or-nil
      (:color (:color 1.0 0.5019608 0.0 1.0))
      (:t-or-nil t))
     :style
     nil
     :modif
     nil)))
  (:connection (:from (:box 37 :out 0)) (:to (:box 36 :in 0)))
  (:connection (:from (:box 38 :out 0)) (:to (:box 39 :in 0)))
  (:connection (:from (:box 39 :out 0)) (:to (:box 13 :in 0)))
  (:connection (:from (:box 40 :out 0)) (:to (:box 39 :in 1)))
  (:connection (:from (:box 41 :out 0)) (:to (:box 38 :in 0)))
  (:connection (:from (:box 42 :out 0)) (:to (:box 38 :in 1)))
  (:connection (:from (:box 44 :out 0)) (:to (:box 12 :in 6)))))